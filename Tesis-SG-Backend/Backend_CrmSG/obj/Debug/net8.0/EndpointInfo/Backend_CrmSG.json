{
  "openapi": "3.0.4",
  "info": {
    "title": "SG CONSULTING API",
    "description": "API oficial de SG Consulting Group para gestión de CRM, inversiones y catálogos.",
    "contact": {
      "name": "Equipo de Tecnología SG",
      "url": "https://sgconsulting.site",
      "email": "soporte@sgconsulting.site"
    },
    "license": {
      "name": "Licencia Interna SG",
      "url": "https://sgconsulting.site/licencia"
    },
    "version": "v1"
  },
  "paths": {
    "/api/Actividad": {
      "get": {
        "tags": [
          "Actividad"
        ],
        "summary": "Obtiene la lista de todas las actividades.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Actividad"
        ],
        "summary": "Crea una nueva actividad.",
        "requestBody": {
          "description": "Datos de la actividad a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Actividad"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Actividad"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Actividad"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Actividad/{id}": {
      "get": {
        "tags": [
          "Actividad"
        ],
        "summary": "Obtiene una actividad por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador de la actividad.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Actividad"
        ],
        "summary": "Actualiza una actividad existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador de la actividad.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Datos actualizados de la actividad.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Actividad"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Actividad"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Actividad"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Actividad"
        ],
        "summary": "Elimina una actividad por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador de la actividad.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Actividad/por-prospecto/{idProspecto}": {
      "get": {
        "tags": [
          "Actividad"
        ],
        "summary": "Obtiene todas las actividades asociadas a un prospecto.",
        "parameters": [
          {
            "name": "idProspecto",
            "in": "path",
            "description": "Identificador del prospecto.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ActividadEconomicaLugarTrabajo": {
      "get": {
        "tags": [
          "ActividadEconomicaLugarTrabajo"
        ],
        "summary": "Obtiene todas las actividades económicas del lugar de trabajo.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActividadEconomicaLugarTrabajo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActividadEconomicaLugarTrabajo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActividadEconomicaLugarTrabajo"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ActividadEconomicaLugarTrabajo"
        ],
        "summary": "Crea una nueva actividad económica.",
        "requestBody": {
          "description": "Objeto ActividadEconomicaLugarTrabajo a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActividadEconomicaLugarTrabajo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActividadEconomicaLugarTrabajo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActividadEconomicaLugarTrabajo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActividadEconomicaLugarTrabajo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActividadEconomicaLugarTrabajo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActividadEconomicaLugarTrabajo"
                }
              }
            }
          }
        }
      }
    },
    "/api/ActividadEconomicaLugarTrabajo/{id}": {
      "get": {
        "tags": [
          "ActividadEconomicaLugarTrabajo"
        ],
        "summary": "Obtiene una actividad económica por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la actividad económica.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActividadEconomicaLugarTrabajo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActividadEconomicaLugarTrabajo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActividadEconomicaLugarTrabajo"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ActividadEconomicaLugarTrabajo"
        ],
        "summary": "Actualiza una actividad económica existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la actividad a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto actualizado.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActividadEconomicaLugarTrabajo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActividadEconomicaLugarTrabajo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActividadEconomicaLugarTrabajo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "ActividadEconomicaLugarTrabajo"
        ],
        "summary": "Elimina una actividad económica por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la actividad a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ActividadEconomicaPrincipal": {
      "get": {
        "tags": [
          "ActividadEconomicaPrincipal"
        ],
        "summary": "Obtiene todas las actividades económicas principales.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActividadEconomicaPrincipal"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActividadEconomicaPrincipal"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActividadEconomicaPrincipal"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ActividadEconomicaPrincipal"
        ],
        "summary": "Crea una nueva actividad económica principal.",
        "requestBody": {
          "description": "Objeto ActividadEconomicaPrincipal a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActividadEconomicaPrincipal"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActividadEconomicaPrincipal"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActividadEconomicaPrincipal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActividadEconomicaPrincipal"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActividadEconomicaPrincipal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActividadEconomicaPrincipal"
                }
              }
            }
          }
        }
      }
    },
    "/api/ActividadEconomicaPrincipal/{id}": {
      "get": {
        "tags": [
          "ActividadEconomicaPrincipal"
        ],
        "summary": "Obtiene una actividad económica principal por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la actividad económica principal.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActividadEconomicaPrincipal"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActividadEconomicaPrincipal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActividadEconomicaPrincipal"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ActividadEconomicaPrincipal"
        ],
        "summary": "Actualiza una actividad económica principal existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la actividad a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto actualizado.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActividadEconomicaPrincipal"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActividadEconomicaPrincipal"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActividadEconomicaPrincipal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "ActividadEconomicaPrincipal"
        ],
        "summary": "Elimina una actividad económica principal por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la actividad a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Adendum": {
      "post": {
        "tags": [
          "Adendum"
        ],
        "summary": "Crea un nuevo adendum.",
        "requestBody": {
          "description": "DTO con los datos para crear el adendum.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdendumCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdendumCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdendumCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Adendum creado exitosamente."
          },
          "400": {
            "description": "Datos inválidos o error en la creación."
          }
        }
      },
      "put": {
        "tags": [
          "Adendum"
        ],
        "summary": "Actualiza un adendum existente.",
        "requestBody": {
          "description": "DTO con los datos actualizados del adendum.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdendumUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdendumUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdendumUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Adendum actualizado correctamente."
          },
          "400": {
            "description": "Datos inválidos o error en la actualización."
          }
        }
      }
    },
    "/api/Adendum/{id}": {
      "get": {
        "tags": [
          "Adendum"
        ],
        "summary": "Obtiene el detalle de un adendum por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del adendum.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Adendum encontrado."
          },
          "404": {
            "description": "Adendum no encontrado."
          }
        }
      }
    },
    "/api/Adendum/por-inversion/{idInversion}": {
      "get": {
        "tags": [
          "Adendum"
        ],
        "summary": "Obtiene la lista de adendums asociados a una inversión.",
        "parameters": [
          {
            "name": "idInversion",
            "in": "path",
            "description": "Identificador de la inversión.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de adendums encontrada."
          },
          "400": {
            "description": "Error en la consulta."
          }
        }
      }
    },
    "/api/Adendum/{id}/generar-documentos": {
      "post": {
        "tags": [
          "Adendum"
        ],
        "summary": "Genera los documentos asociados a un adendum.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del adendum.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idUsuario",
            "in": "query",
            "description": "Identificador del usuario que genera los documentos.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Documentos generados correctamente."
          },
          "400": {
            "description": "Error al generar los documentos."
          }
        }
      }
    },
    "/api/Adendum/{id}/continuar-flujo": {
      "post": {
        "tags": [
          "Adendum"
        ],
        "summary": "Continúa el flujo del adendum (activar proyección y cronograma).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del adendum.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idUsuario",
            "in": "query",
            "description": "Identificador del usuario que continúa el flujo.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Flujo continuado correctamente."
          },
          "400": {
            "description": "Error al continuar el flujo."
          }
        }
      }
    },
    "/api/Adendum/{id}/detalle-completo": {
      "get": {
        "tags": [
          "Adendum"
        ],
        "summary": "Obtiene el detalle completo de un adendum.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del adendum.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalle completo encontrado."
          },
          "404": {
            "description": "Adendum no encontrado."
          }
        }
      }
    },
    "/api/Adendum/set-incremento": {
      "put": {
        "tags": [
          "Adendum"
        ],
        "summary": "Asigna el incremento a un adendum.",
        "requestBody": {
          "description": "DTO con los datos de incremento del adendum.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdendumSetIncrementoDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdendumSetIncrementoDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdendumSetIncrementoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Incremento asignado correctamente."
          },
          "400": {
            "description": "Error al asignar el incremento."
          }
        }
      }
    },
    "/api/Adendum/por-adendum/{idAdendum}": {
      "get": {
        "tags": [
          "Adendum"
        ],
        "summary": "Obtiene los documentos asociados a un adendum.",
        "parameters": [
          {
            "name": "idAdendum",
            "in": "path",
            "description": "Identificador del adendum.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de documentos encontrada."
          },
          "400": {
            "description": "Error al obtener los documentos."
          }
        }
      }
    },
    "/api/Agencia": {
      "get": {
        "tags": [
          "Agencia"
        ],
        "summary": "Obtiene la lista de todas las agencias.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Agencia"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Agencia"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Agencia"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Agencia"
        ],
        "summary": "Crea una nueva agencia.",
        "requestBody": {
          "description": "Objeto agencia a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Agencia"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Agencia"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Agencia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Agencia"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agencia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agencia"
                }
              }
            }
          }
        }
      }
    },
    "/api/Agencia/{id}": {
      "get": {
        "tags": [
          "Agencia"
        ],
        "summary": "Obtiene una agencia por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la agencia.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Agencia"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agencia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agencia"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Agencia"
        ],
        "summary": "Actualiza una agencia existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la agencia.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto agencia actualizado.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Agencia"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Agencia"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Agencia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Agencia"
        ],
        "summary": "Elimina una agencia por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la agencia a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Banco": {
      "get": {
        "tags": [
          "Banco"
        ],
        "summary": "Obtiene la lista de bancos (solo IdBanco y BancoNombre).",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Banco"
        ],
        "summary": "Crea un nuevo banco.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Banco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Banco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Banco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Banco"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Banco"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Banco"
                }
              }
            }
          }
        }
      }
    },
    "/api/Banco/{id}": {
      "get": {
        "tags": [
          "Banco"
        ],
        "summary": "Obtiene un banco por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Banco"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Banco"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Banco"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Banco"
        ],
        "summary": "Actualiza un banco existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Banco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Banco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Banco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Banco"
        ],
        "summary": "Elimina un banco por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Beneficiario": {
      "get": {
        "tags": [
          "Beneficiario"
        ],
        "summary": "Obtiene la lista de todos los beneficiarios.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Beneficiario"
        ],
        "summary": "Crea un nuevo beneficiario.",
        "requestBody": {
          "description": "Datos del beneficiario a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Beneficiario"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Beneficiario"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Beneficiario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Beneficiario/{id}": {
      "get": {
        "tags": [
          "Beneficiario"
        ],
        "summary": "Obtiene un beneficiario por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del beneficiario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Beneficiario"
        ],
        "summary": "Actualiza un beneficiario existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del beneficiario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Datos actualizados del beneficiario.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Beneficiario"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Beneficiario"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Beneficiario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Beneficiario"
        ],
        "summary": "Elimina un beneficiario por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del beneficiario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Beneficiario/por-solicitud/{idSolicitud}": {
      "get": {
        "tags": [
          "Beneficiario"
        ],
        "summary": "Obtiene todos los beneficiarios asociados a una solicitud de inversión.",
        "parameters": [
          {
            "name": "idSolicitud",
            "in": "path",
            "description": "Identificador de la solicitud de inversión.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/CalendarioOperaciones": {
      "get": {
        "tags": [
          "CalendarioOperaciones"
        ],
        "summary": "Obtiene la lista de todos los calendarios de operaciones.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CalendarioOperaciones"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CalendarioOperaciones"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CalendarioOperaciones"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CalendarioOperaciones"
        ],
        "summary": "Crea un nuevo calendario de operaciones.",
        "requestBody": {
          "description": "Datos del calendario de operaciones a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarioOperaciones"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarioOperaciones"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarioOperaciones"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarioOperaciones"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarioOperaciones"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarioOperaciones"
                }
              }
            }
          }
        }
      }
    },
    "/api/CalendarioOperaciones/{id}": {
      "get": {
        "tags": [
          "CalendarioOperaciones"
        ],
        "summary": "Obtiene un calendario de operaciones por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del calendario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarioOperaciones"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarioOperaciones"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarioOperaciones"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CalendarioOperaciones"
        ],
        "summary": "Actualiza los datos de un calendario de operaciones existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del calendario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Datos actualizados del calendario.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarioOperacionesUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarioOperacionesUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarioOperacionesUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "CalendarioOperaciones"
        ],
        "summary": "Elimina un calendario de operaciones por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del calendario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Casos": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Obtiene la lista de todos los casos registrados.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Casos"
        ],
        "summary": "Crea un nuevo caso.",
        "requestBody": {
          "description": "Datos para la creación del caso.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CasoCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CasoCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CasoCreateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Casos/{id}": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Obtiene el detalle de un caso por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del caso.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Casos"
        ],
        "summary": "Actualiza los datos de un caso existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del caso.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Datos actualizados del caso.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CasoUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CasoUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CasoUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Casos/por-cliente/{idCliente}": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Obtiene todos los casos asociados a un cliente específico.",
        "parameters": [
          {
            "name": "idCliente",
            "in": "path",
            "description": "Identificador del cliente.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Casos/por-inversion/{idInversion}": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Obtiene todos los casos asociados a una inversión específica.",
        "parameters": [
          {
            "name": "idInversion",
            "in": "path",
            "description": "Identificador de la inversión.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Casos/por-pago/{idPago}": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Obtiene todos los casos asociados a un pago específico.",
        "parameters": [
          {
            "name": "idPago",
            "in": "path",
            "description": "Identificador del pago.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Casos/{id}/continuar": {
      "post": {
        "tags": [
          "Casos"
        ],
        "summary": "Continúa el flujo del caso (cambio de estado o avance de proceso).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del caso.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Casos/rollback-pagos": {
      "post": {
        "tags": [
          "Casos"
        ],
        "summary": "Realiza un rollback de pagos asociados a un caso.",
        "requestBody": {
          "description": "Datos para identificar el pago y usuario que realiza el rollback.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RollbackPagosDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RollbackPagosDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RollbackPagosDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Ciudad": {
      "get": {
        "tags": [
          "Ciudad"
        ],
        "summary": "Obtiene todas las ciudades.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ciudad"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ciudad"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ciudad"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ciudad"
        ],
        "summary": "Crea una nueva ciudad.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ciudad"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ciudad"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ciudad"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ciudad"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ciudad"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ciudad"
                }
              }
            }
          }
        }
      }
    },
    "/api/Ciudad/{id}": {
      "get": {
        "tags": [
          "Ciudad"
        ],
        "summary": "Obtiene una ciudad por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ciudad"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ciudad"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ciudad"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ciudad"
        ],
        "summary": "Actualiza una ciudad existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ciudad"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ciudad"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ciudad"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Ciudad"
        ],
        "summary": "Elimina una ciudad por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Ciudad/por-provincia/{idProvincia}": {
      "get": {
        "tags": [
          "Ciudad"
        ],
        "summary": "Obtiene todas las ciudades de una provincia específica.",
        "parameters": [
          {
            "name": "idProvincia",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ciudad"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ciudad"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ciudad"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Cliente": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Obtiene la lista de todos los clientes registrados.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Cliente/{id}": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Obtiene los datos de un cliente por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del cliente.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Cliente"
        ],
        "summary": "Actualiza los datos de un cliente existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del cliente a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Datos actualizados del cliente.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClienteUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClienteUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClienteUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Cliente/por-propietario/{idUsuario}": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Obtiene la lista de clientes asignados a un usuario propietario.",
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "description": "Identificador del usuario propietario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConfiguracionProducto/{idProducto}": {
      "get": {
        "tags": [
          "ConfiguracionProducto"
        ],
        "summary": "Obtiene todas las configuraciones de un producto específico.",
        "parameters": [
          {
            "name": "idProducto",
            "in": "path",
            "description": "ID del producto.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConfiguracionProducto/detalle/{id}": {
      "get": {
        "tags": [
          "ConfiguracionProducto"
        ],
        "summary": "Obtiene una configuración por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la configuración.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConfiguracionProducto": {
      "post": {
        "tags": [
          "ConfiguracionProducto"
        ],
        "summary": "Crea una nueva configuración de producto.",
        "requestBody": {
          "description": "Objeto de configuración a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguracionesProducto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguracionesProducto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguracionesProducto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConfiguracionProducto/{id}": {
      "put": {
        "tags": [
          "ConfiguracionProducto"
        ],
        "summary": "Actualiza una configuración existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la configuración a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Datos nuevos de la configuración.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguracionesProducto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguracionesProducto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguracionesProducto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "ConfiguracionProducto"
        ],
        "summary": "Elimina una configuración de producto por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la configuración.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConfiguracionProducto/vista": {
      "get": {
        "tags": [
          "ConfiguracionProducto"
        ],
        "summary": "Obtiene todas las configuraciones de productos (vista extendida).",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConfiguracionProducto/vista/{id}": {
      "get": {
        "tags": [
          "ConfiguracionProducto"
        ],
        "summary": "Obtiene una configuración extendida por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la configuración (vista).",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConfiguracionProducto/vista/por-producto/{idProducto}": {
      "get": {
        "tags": [
          "ConfiguracionProducto"
        ],
        "summary": "Obtiene todas las configuraciones extendidas asociadas a un producto.",
        "parameters": [
          {
            "name": "idProducto",
            "in": "path",
            "description": "ID del producto.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ContinuarSolicitud": {
      "get": {
        "tags": [
          "ContinuarSolicitud"
        ],
        "summary": "Obtiene todas las opciones de ContinuarSolicitud.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContinuarSolicitud"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContinuarSolicitud"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContinuarSolicitud"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContinuarSolicitud"
        ],
        "summary": "Crea una nueva opción de ContinuarSolicitud.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContinuarSolicitud"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContinuarSolicitud"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContinuarSolicitud"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContinuarSolicitud"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContinuarSolicitud"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContinuarSolicitud"
                }
              }
            }
          }
        }
      }
    },
    "/api/ContinuarSolicitud/{id}": {
      "get": {
        "tags": [
          "ContinuarSolicitud"
        ],
        "summary": "Obtiene una opción de ContinuarSolicitud por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContinuarSolicitud"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContinuarSolicitud"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContinuarSolicitud"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContinuarSolicitud"
        ],
        "summary": "Actualiza una opción de ContinuarSolicitud existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContinuarSolicitud"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContinuarSolicitud"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContinuarSolicitud"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "ContinuarSolicitud"
        ],
        "summary": "Elimina una opción de ContinuarSolicitud por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Contrato/generar-por-solicitud": {
      "post": {
        "tags": [
          "Contrato"
        ],
        "summary": "Genera automáticamente el contrato principal a partir de una solicitud de inversión.",
        "requestBody": {
          "description": "Objeto con el identificador de la solicitud de inversión.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerarContratoRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerarContratoRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerarContratoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Si el contrato se generó exitosamente."
          },
          "500": {
            "description": "Si ocurre un error interno durante la generación."
          }
        }
      }
    },
    "/api/ContratoSecuencial/generar": {
      "get": {
        "tags": [
          "ContratoSecuencial"
        ],
        "summary": "Genera y obtiene el número secuencial de contrato para una solicitud y proyección dadas.",
        "parameters": [
          {
            "name": "solicitud",
            "in": "query",
            "description": "Identificador de la solicitud de inversión.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "proyeccion",
            "in": "query",
            "description": "Identificador de la proyección asociada.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Número de contrato generado correctamente."
          },
          "400": {
            "description": "No se pudo generar el número de contrato."
          }
        }
      }
    },
    "/api/dashboard/clientes/estadisticas": {
      "get": {
        "tags": [
          "DashboardCliente"
        ],
        "summary": "Obtiene estadísticas agregadas de clientes, para su visualización en el dashboard.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasClienteDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasClienteDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasClienteDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/inversiones/estadisticas": {
      "get": {
        "tags": [
          "DashboardInversion"
        ],
        "summary": "Obtiene estadísticas agregadas de inversiones para visualización en el dashboard.",
        "description": "Devuelve totales, agrupaciones y otros KPIs relevantes de inversiones.",
        "responses": {
          "200": {
            "description": "Devuelve el objeto con los datos estadísticos",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasInversionDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasInversionDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasInversionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/pagos-casos/estadisticas": {
      "get": {
        "tags": [
          "DashboardPagosCasos"
        ],
        "summary": "Obtiene las estadísticas agregadas de pagos y casos para el dashboard.",
        "description": "Devuelve un objeto con los principales indicadores (KPIs) sobre pagos y casos, agrupados y listos para visualización.",
        "responses": {
          "200": {
            "description": "Devuelve el objeto con los datos estadísticos",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasPagosCasosDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasPagosCasosDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasPagosCasosDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/prospectos/estadisticas": {
      "get": {
        "tags": [
          "DashboardProspecto"
        ],
        "summary": "Obtiene las estadísticas y métricas principales de prospectos para el dashboard.",
        "description": "Devuelve los principales indicadores sobre prospectos, como cantidad por estado, por origen, embudo comercial, etc.",
        "responses": {
          "200": {
            "description": "Devuelve el objeto con las métricas principales",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasProspectosDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasProspectosDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasProspectosDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/solicitudes/estadisticas": {
      "get": {
        "tags": [
          "DashboardSolicitud"
        ],
        "summary": "Obtiene todas las estadísticas de solicitudes para el dashboard.",
        "description": "Este endpoint retorna los principales indicadores relacionados a solicitudes de inversión, como cantidad total, por estado, por producto, y otros datos relevantes para el dashboard.",
        "responses": {
          "200": {
            "description": "Retorna el objeto con las estadísticas de solicitudes",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasSolicitudDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasSolicitudDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasSolicitudDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/tareas/estadisticas": {
      "get": {
        "tags": [
          "DashboardTareas"
        ],
        "summary": "Obtiene las estadísticas principales de tareas para el dashboard.",
        "description": "Devuelve métricas como cantidad total de tareas, tareas por estado, por usuario, y otros KPIs relevantes para el dashboard.",
        "responses": {
          "200": {
            "description": "Retorna el objeto con estadísticas de tareas.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasTareasDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasTareasDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadisticasTareasDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documento/entidad": {
      "get": {
        "tags": [
          "Documento"
        ],
        "summary": "Lista los documentos asociados a una entidad (Solicitud, Tarea, Inversión, etc).",
        "parameters": [
          {
            "name": "tipoEntidad",
            "in": "query",
            "description": "Tipo de la entidad (ej: \"solicitud\", \"tarea\", \"inversion\").",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idEntidad",
            "in": "query",
            "description": "ID de la entidad asociada.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Documento": {
      "post": {
        "tags": [
          "Documento"
        ],
        "summary": "Crea un nuevo documento (sube un archivo) asociado a una entidad.",
        "requestBody": {
          "description": "Datos y archivo codificado del documento.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoCargaDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoCargaDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoCargaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Documento/{id}": {
      "put": {
        "tags": [
          "Documento"
        ],
        "summary": "Actualiza los datos de un documento existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del documento.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Nuevos datos del documento.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoCargaDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoCargaDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoCargaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Documento"
        ],
        "summary": "Elimina lógicamente (desactiva) un documento.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del documento a desactivar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Documento/motivo/{idMotivo}": {
      "delete": {
        "tags": [
          "Documento"
        ],
        "summary": "Elimina todos los documentos automáticos asociados a un motivo (rollback).",
        "parameters": [
          {
            "name": "idMotivo",
            "in": "path",
            "description": "ID del motivo.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idTarea",
            "in": "query",
            "description": "ID de la tarea (opcional).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idSolicitudInversion",
            "in": "query",
            "description": "ID de la solicitud de inversión (opcional).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idInversion",
            "in": "query",
            "description": "ID de la inversión (opcional).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Documento/motivo": {
      "post": {
        "tags": [
          "Documento"
        ],
        "summary": "Crea documentos automáticos a partir de un motivo.",
        "requestBody": {
          "description": "Datos necesarios para la creación de documentos por motivo.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoMotivoDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoMotivoDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoMotivoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Documento/{id}/archivo": {
      "put": {
        "tags": [
          "Documento"
        ],
        "summary": "Actualiza solo el archivo binario de un documento (no los metadatos).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del documento.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Nuevo archivo codificado en base64 y sus metadatos.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoActualizarDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoActualizarDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoActualizarDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Documento/{id}/vista": {
      "get": {
        "tags": [
          "Documento"
        ],
        "summary": "Obtiene los datos de un documento desde la vista extendida por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del documento.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Documento/por-solicitud-y-motivo": {
      "get": {
        "tags": [
          "Documento"
        ],
        "summary": "Lista documentos filtrados por solicitud y motivo.",
        "parameters": [
          {
            "name": "idSolicitudInversion",
            "in": "query",
            "description": "ID de la solicitud de inversión.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idMotivo",
            "in": "query",
            "description": "ID del motivo.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Documento/descargar/{id}": {
      "get": {
        "tags": [
          "Documento"
        ],
        "summary": "Descarga el archivo físico de un documento (Word) según su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del documento a descargar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/EstadoCivil": {
      "get": {
        "tags": [
          "EstadoCivil"
        ],
        "summary": "Obtiene todos los estados civiles.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EstadoCivil"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EstadoCivil"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EstadoCivil"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EstadoCivil"
        ],
        "summary": "Crea un nuevo estado civil.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EstadoCivil"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EstadoCivil"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EstadoCivil"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EstadoCivil"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadoCivil"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadoCivil"
                }
              }
            }
          }
        }
      }
    },
    "/api/EstadoCivil/{id}": {
      "get": {
        "tags": [
          "EstadoCivil"
        ],
        "summary": "Obtiene un estado civil por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EstadoCivil"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadoCivil"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadoCivil"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EstadoCivil"
        ],
        "summary": "Actualiza un estado civil existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EstadoCivil"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EstadoCivil"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EstadoCivil"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "EstadoCivil"
        ],
        "summary": "Elimina un estado civil por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Etnia": {
      "get": {
        "tags": [
          "Etnia"
        ],
        "summary": "Obtiene todas las etnias.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Etnia"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Etnia"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Etnia"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Etnia"
        ],
        "summary": "Crea una nueva etnia.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Etnia"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Etnia"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Etnia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Etnia"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Etnia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Etnia"
                }
              }
            }
          }
        }
      }
    },
    "/api/Etnia/{id}": {
      "get": {
        "tags": [
          "Etnia"
        ],
        "summary": "Obtiene una etnia por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Etnia"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Etnia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Etnia"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Etnia"
        ],
        "summary": "Actualiza una etnia existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Etnia"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Etnia"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Etnia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Etnia"
        ],
        "summary": "Elimina una etnia por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Genero": {
      "get": {
        "tags": [
          "Genero"
        ],
        "summary": "Obtiene todos los géneros.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Genero"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Genero"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Genero"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Genero"
        ],
        "summary": "Crea un nuevo género.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Genero"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Genero"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Genero"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Genero"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genero"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genero"
                }
              }
            }
          }
        }
      }
    },
    "/api/Genero/{id}": {
      "get": {
        "tags": [
          "Genero"
        ],
        "summary": "Obtiene un género por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Genero"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genero"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genero"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Genero"
        ],
        "summary": "Actualiza un género existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Genero"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Genero"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Genero"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Genero"
        ],
        "summary": "Elimina un género por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Inversion": {
      "get": {
        "tags": [
          "Inversion"
        ],
        "summary": "Obtiene la lista de todas las inversiones registradas.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Inversion/{id}": {
      "get": {
        "tags": [
          "Inversion"
        ],
        "summary": "Obtiene los datos de una inversión por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador de la inversión.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Inversion/por-propietario/{idUsuario}": {
      "get": {
        "tags": [
          "Inversion"
        ],
        "summary": "Obtiene la lista de inversiones asignadas a un usuario propietario.",
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "description": "Identificador del usuario propietario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Inversion/por-cliente/{idCliente}": {
      "get": {
        "tags": [
          "Inversion"
        ],
        "summary": "Obtiene la lista de inversiones asignadas a un cliente específico.",
        "parameters": [
          {
            "name": "idCliente",
            "in": "path",
            "description": "Identificador del cliente.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/JustificativoTransaccion": {
      "get": {
        "tags": [
          "JustificativoTransaccion"
        ],
        "summary": "Obtiene todos los justificativos de transacción.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JustificativoTransaccion"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JustificativoTransaccion"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JustificativoTransaccion"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "JustificativoTransaccion"
        ],
        "summary": "Crea un nuevo justificativo de transacción.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JustificativoTransaccion"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JustificativoTransaccion"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JustificativoTransaccion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JustificativoTransaccion"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JustificativoTransaccion"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JustificativoTransaccion"
                }
              }
            }
          }
        }
      }
    },
    "/api/JustificativoTransaccion/{id}": {
      "get": {
        "tags": [
          "JustificativoTransaccion"
        ],
        "summary": "Obtiene un justificativo de transacción por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JustificativoTransaccion"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JustificativoTransaccion"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JustificativoTransaccion"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "JustificativoTransaccion"
        ],
        "summary": "Actualiza un justificativo de transacción existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JustificativoTransaccion"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JustificativoTransaccion"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JustificativoTransaccion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "JustificativoTransaccion"
        ],
        "summary": "Elimina un justificativo de transacción por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Menu": {
      "get": {
        "tags": [
          "Menu"
        ],
        "summary": "Obtiene la lista de todos los menús registrados en el sistema.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Menu"
        ],
        "summary": "Crea un nuevo menú de seguridad.",
        "requestBody": {
          "description": "Objeto menú a registrar.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Menu/{id}": {
      "get": {
        "tags": [
          "Menu"
        ],
        "summary": "Obtiene la información de un menú específico por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del menú.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Menu"
        ],
        "summary": "Actualiza la información de un menú existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del menú a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto menú con los datos actualizados.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Menu"
        ],
        "summary": "Elimina un menú por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del menú a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Menu/rol/{rol}": {
      "get": {
        "tags": [
          "Menu"
        ],
        "summary": "Obtiene los menús disponibles para un rol específico.",
        "parameters": [
          {
            "name": "rol",
            "in": "path",
            "description": "Nombre del rol.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ModoFirma": {
      "get": {
        "tags": [
          "ModoFirma"
        ],
        "summary": "Obtiene todos los modos de firma disponibles.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModoFirma"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModoFirma"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModoFirma"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ModoFirma"
        ],
        "summary": "Crea un nuevo modo de firma.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModoFirma"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModoFirma"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModoFirma"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModoFirma"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModoFirma"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModoFirma"
                }
              }
            }
          }
        }
      }
    },
    "/api/ModoFirma/{id}": {
      "get": {
        "tags": [
          "ModoFirma"
        ],
        "summary": "Obtiene un modo de firma por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModoFirma"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModoFirma"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModoFirma"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ModoFirma"
        ],
        "summary": "Actualiza un modo de firma existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModoFirma"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModoFirma"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModoFirma"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "ModoFirma"
        ],
        "summary": "Elimina un modo de firma por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Nacionalidad": {
      "get": {
        "tags": [
          "Nacionalidad"
        ],
        "summary": "Obtiene todas las nacionalidades disponibles.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Nacionalidad"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Nacionalidad"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Nacionalidad"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Nacionalidad"
        ],
        "summary": "Crea una nueva nacionalidad.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Nacionalidad"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Nacionalidad"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Nacionalidad"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Nacionalidad"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nacionalidad"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nacionalidad"
                }
              }
            }
          }
        }
      }
    },
    "/api/Nacionalidad/{id}": {
      "get": {
        "tags": [
          "Nacionalidad"
        ],
        "summary": "Obtiene una nacionalidad por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Nacionalidad"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nacionalidad"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nacionalidad"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Nacionalidad"
        ],
        "summary": "Actualiza una nacionalidad existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Nacionalidad"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Nacionalidad"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Nacionalidad"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Nacionalidad"
        ],
        "summary": "Elimina una nacionalidad por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/OrigenCliente": {
      "get": {
        "tags": [
          "OrigenCliente"
        ],
        "summary": "Obtiene todos los orígenes de cliente.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrigenCliente"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrigenCliente"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrigenCliente"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OrigenCliente"
        ],
        "summary": "Crea un nuevo origen de cliente.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrigenCliente"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrigenCliente"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrigenCliente"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrigenCliente"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrigenCliente"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrigenCliente"
                }
              }
            }
          }
        }
      }
    },
    "/api/OrigenCliente/{id}": {
      "get": {
        "tags": [
          "OrigenCliente"
        ],
        "summary": "Obtiene un origen de cliente por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrigenCliente"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrigenCliente"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrigenCliente"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OrigenCliente"
        ],
        "summary": "Actualiza un origen de cliente existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrigenCliente"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrigenCliente"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrigenCliente"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "OrigenCliente"
        ],
        "summary": "Elimina un origen de cliente por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Pagos": {
      "get": {
        "tags": [
          "Pagos"
        ],
        "summary": "Obtiene la lista de todos los pagos registrados.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Pagos"
        ],
        "summary": "Crea un nuevo pago.",
        "requestBody": {
          "description": "Datos para la creación del pago.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PagoCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PagoCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PagoCreateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Pagos/{id}": {
      "get": {
        "tags": [
          "Pagos"
        ],
        "summary": "Obtiene los datos de un pago por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del pago.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Pagos"
        ],
        "summary": "Actualiza los datos de un pago existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del pago.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Datos actualizados del pago.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PagoUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PagoUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PagoUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Pagos"
        ],
        "summary": "Elimina un pago por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del pago.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Pagos/por-calendario/{idCalendario}": {
      "get": {
        "tags": [
          "Pagos"
        ],
        "summary": "Obtiene la lista de pagos asociados a un calendario.",
        "parameters": [
          {
            "name": "idCalendario",
            "in": "path",
            "description": "Identificador del calendario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Pagos/generar-por-calendario": {
      "post": {
        "tags": [
          "Pagos"
        ],
        "summary": "Genera automáticamente pagos asociados a un calendario.",
        "requestBody": {
          "description": "Datos para la generación de pagos por calendario.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerarPagosCalendarioDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerarPagosCalendarioDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerarPagosCalendarioDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Pagos/{id}/rollback": {
      "post": {
        "tags": [
          "Pagos"
        ],
        "summary": "Realiza rollback de pagos por identificador de pago.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del pago.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Datos del usuario que realiza la modificación.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RollbackUsuarioDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RollbackUsuarioDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RollbackUsuarioDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Pais": {
      "get": {
        "tags": [
          "Pais"
        ],
        "summary": "Obtiene todos los países registrados.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pais"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pais"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pais"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Pais"
        ],
        "summary": "Crea un nuevo país.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pais"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Pais"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Pais"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Pais"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pais"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pais"
                }
              }
            }
          }
        }
      }
    },
    "/api/Pais/{id}": {
      "get": {
        "tags": [
          "Pais"
        ],
        "summary": "Obtiene un país por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Pais"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pais"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pais"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Pais"
        ],
        "summary": "Actualiza un país existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pais"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Pais"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Pais"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Pais"
        ],
        "summary": "Elimina un país por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Permiso": {
      "get": {
        "tags": [
          "Permiso"
        ],
        "summary": "Obtiene la lista de todos los permisos registrados en el sistema.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Permiso"
        ],
        "summary": "Crea un nuevo permiso de seguridad.",
        "requestBody": {
          "description": "Objeto permiso a registrar.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permiso"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Permiso"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Permiso"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Permiso/{id}": {
      "get": {
        "tags": [
          "Permiso"
        ],
        "summary": "Obtiene la información de un permiso específico por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del permiso.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Permiso"
        ],
        "summary": "Actualiza la información de un permiso existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del permiso a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto permiso con los datos actualizados.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permiso"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Permiso"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Permiso"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Permiso"
        ],
        "summary": "Elimina un permiso por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del permiso a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Prioridad": {
      "get": {
        "tags": [
          "Prioridad"
        ],
        "summary": "Obtiene todas las prioridades registradas.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Prioridad"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Prioridad"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Prioridad"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Prioridad"
        ],
        "summary": "Crea una nueva prioridad.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prioridad"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Prioridad"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Prioridad"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Prioridad"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prioridad"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prioridad"
                }
              }
            }
          }
        }
      }
    },
    "/api/Prioridad/{id}": {
      "get": {
        "tags": [
          "Prioridad"
        ],
        "summary": "Obtiene una prioridad por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Prioridad"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prioridad"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prioridad"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Prioridad"
        ],
        "summary": "Actualiza una prioridad existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prioridad"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Prioridad"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Prioridad"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Prioridad"
        ],
        "summary": "Elimina una prioridad por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Producto": {
      "get": {
        "tags": [
          "Producto"
        ],
        "summary": "Obtiene todos los productos.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Producto"
        ],
        "summary": "Crea un nuevo producto.",
        "requestBody": {
          "description": "Datos del producto.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Producto/{id}": {
      "get": {
        "tags": [
          "Producto"
        ],
        "summary": "Obtiene un producto por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del producto.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Producto"
        ],
        "summary": "Actualiza un producto existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del producto a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Nuevos datos del producto.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Producto"
        ],
        "summary": "Elimina un producto por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del producto.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Producto/{id}/configuraciones": {
      "get": {
        "tags": [
          "Producto"
        ],
        "summary": "Obtiene las configuraciones asociadas a un producto específico.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del producto.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Producto/{id}/detalle": {
      "get": {
        "tags": [
          "Producto"
        ],
        "summary": "Obtiene un producto junto a todas sus configuraciones.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del producto.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Producto/vista": {
      "get": {
        "tags": [
          "Producto"
        ],
        "summary": "Obtiene la lista extendida de productos (vista enriquecida).",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Producto/vista/{id}": {
      "get": {
        "tags": [
          "Producto"
        ],
        "summary": "Obtiene los datos enriquecidos (vista) de un producto por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del producto.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ProductoInteres": {
      "get": {
        "tags": [
          "ProductoInteres"
        ],
        "summary": "Obtiene todos los productos de interés registrados.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductoInteres"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductoInteres"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductoInteres"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProductoInteres"
        ],
        "summary": "Crea un nuevo producto de interés.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoInteres"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoInteres"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoInteres"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductoInteres"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductoInteres"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductoInteres"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductoInteres/{id}": {
      "get": {
        "tags": [
          "ProductoInteres"
        ],
        "summary": "Obtiene un producto de interés por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductoInteres"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductoInteres"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductoInteres"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductoInteres"
        ],
        "summary": "Actualiza un producto de interés existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoInteres"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoInteres"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoInteres"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "ProductoInteres"
        ],
        "summary": "Elimina un producto de interés por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Profesion": {
      "get": {
        "tags": [
          "Profesion"
        ],
        "summary": "Obtiene todas las profesiones registradas.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Profesion"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Profesion"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Profesion"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Profesion"
        ],
        "summary": "Crea una nueva profesión.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profesion"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Profesion"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Profesion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Profesion"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profesion"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profesion"
                }
              }
            }
          }
        }
      }
    },
    "/api/Profesion/{id}": {
      "get": {
        "tags": [
          "Profesion"
        ],
        "summary": "Obtiene una profesión por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Profesion"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profesion"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profesion"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Profesion"
        ],
        "summary": "Actualiza una profesión existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profesion"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Profesion"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Profesion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Profesion"
        ],
        "summary": "Elimina una profesión por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Prospecto": {
      "get": {
        "tags": [
          "Prospecto"
        ],
        "summary": "Obtiene la lista de todos los prospectos registrados.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Prospecto"
        ],
        "summary": "Crea un nuevo prospecto.",
        "requestBody": {
          "description": "Datos del prospecto a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prospecto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Prospecto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Prospecto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Prospecto/{id}": {
      "get": {
        "tags": [
          "Prospecto"
        ],
        "summary": "Obtiene los datos de un prospecto por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del prospecto.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Prospecto"
        ],
        "summary": "Actualiza los datos de un prospecto existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del prospecto.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Datos actualizados del prospecto.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prospecto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Prospecto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Prospecto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Prospecto"
        ],
        "summary": "Elimina un prospecto por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador del prospecto.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Provincia": {
      "get": {
        "tags": [
          "Provincia"
        ],
        "summary": "Obtiene todas las provincias registradas.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Provincia"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Provincia"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Provincia"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Provincia"
        ],
        "summary": "Crea una nueva provincia.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Provincia"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Provincia"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Provincia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Provincia"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provincia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provincia"
                }
              }
            }
          }
        }
      }
    },
    "/api/Provincia/{id}": {
      "get": {
        "tags": [
          "Provincia"
        ],
        "summary": "Obtiene una provincia por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Provincia"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provincia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provincia"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Provincia"
        ],
        "summary": "Actualiza una provincia existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Provincia"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Provincia"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Provincia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Provincia"
        ],
        "summary": "Elimina una provincia por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Provincia/por-pais/{idPais}": {
      "get": {
        "tags": [
          "Provincia"
        ],
        "summary": "Obtiene las provincias asociadas a un país específico.",
        "parameters": [
          {
            "name": "idPais",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Provincia"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Provincia"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Provincia"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Proyeccion": {
      "post": {
        "tags": [
          "Proyeccion"
        ],
        "summary": "Crea una nueva proyección de inversión.",
        "requestBody": {
          "description": "Datos para crear la proyección.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProyeccionCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProyeccionCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProyeccionCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Proyeccion/{id}/cronograma": {
      "get": {
        "tags": [
          "Proyeccion"
        ],
        "summary": "Obtiene el cronograma de pagos/cuotas de una proyección.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador de la proyección.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Proyeccion/{id}": {
      "put": {
        "tags": [
          "Proyeccion"
        ],
        "summary": "Actualiza los datos y el cronograma de una proyección existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Datos actualizados de la proyección.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProyeccionUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProyeccionUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProyeccionUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Proyeccion/solicitud/{idSolicitudInversion}": {
      "get": {
        "tags": [
          "Proyeccion"
        ],
        "summary": "Obtiene la lista de proyecciones asociadas a una solicitud de inversión.",
        "parameters": [
          {
            "name": "idSolicitudInversion",
            "in": "path",
            "description": "Identificador de la solicitud de inversión.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Proyeccion/incremento": {
      "post": {
        "tags": [
          "Proyeccion"
        ],
        "summary": "Realiza un incremento de capital sobre una proyección existente.",
        "requestBody": {
          "description": "Datos para el incremento de proyección.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProyeccionIncrementoDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProyeccionIncrementoDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProyeccionIncrementoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Referencia": {
      "get": {
        "tags": [
          "Referencia"
        ],
        "summary": "Obtiene la lista de todas las referencias registradas.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Referencia"
        ],
        "summary": "Crea una nueva referencia.",
        "requestBody": {
          "description": "Datos de la referencia a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Referencia"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Referencia"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Referencia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Referencia/{id}": {
      "get": {
        "tags": [
          "Referencia"
        ],
        "summary": "Obtiene los datos de una referencia por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador de la referencia.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Referencia"
        ],
        "summary": "Actualiza los datos de una referencia existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador de la referencia.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Datos actualizados de la referencia.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Referencia"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Referencia"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Referencia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Referencia"
        ],
        "summary": "Elimina una referencia por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador de la referencia.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Referencia/por-solicitud/{idSolicitudInversion}": {
      "get": {
        "tags": [
          "Referencia"
        ],
        "summary": "Obtiene la lista de referencias asociadas a una solicitud de inversión específica.",
        "parameters": [
          {
            "name": "idSolicitudInversion",
            "in": "path",
            "description": "Identificador de la solicitud de inversión.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Rol": {
      "get": {
        "tags": [
          "Rol"
        ],
        "summary": "Obtiene la lista de todos los roles registrados en el sistema.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Rol"
        ],
        "summary": "Crea un nuevo rol de seguridad.",
        "requestBody": {
          "description": "Objeto rol a registrar.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rol"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rol"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Rol"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Rol/{id}": {
      "get": {
        "tags": [
          "Rol"
        ],
        "summary": "Obtiene la información de un rol específico por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del rol.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Rol"
        ],
        "summary": "Actualiza la información de un rol existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del rol a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto rol con los datos actualizados.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rol"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rol"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Rol"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Rol"
        ],
        "summary": "Elimina un rol por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del rol a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SolicitudInversion": {
      "get": {
        "tags": [
          "SolicitudInversion"
        ],
        "summary": "Obtiene todas las solicitudes de inversión (básico, sin detalle).",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SolicitudInversion/detalle": {
      "get": {
        "tags": [
          "SolicitudInversion"
        ],
        "summary": "Obtiene todas las solicitudes de inversión con detalle completo (unión de varias tablas/vistas).",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SolicitudInversion/{id}": {
      "get": {
        "tags": [
          "SolicitudInversion"
        ],
        "summary": "Obtiene una solicitud de inversión por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id de la solicitud.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "SolicitudInversion"
        ],
        "summary": "Elimina una solicitud de inversión por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id de la solicitud a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SolicitudInversion/estructura": {
      "post": {
        "tags": [
          "SolicitudInversion"
        ],
        "summary": "Crea una nueva solicitud de inversión a partir de un DTO estructurado.",
        "requestBody": {
          "description": "DTO con los datos necesarios para la creación.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolicitudInversionCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SolicitudInversionCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SolicitudInversionCreateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SolicitudInversion/estructura/{id}": {
      "put": {
        "tags": [
          "SolicitudInversion"
        ],
        "summary": "Actualiza una solicitud de inversión existente a partir de un DTO estructurado.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id de la solicitud a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "DTO con los campos a actualizar.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolicitudInversionUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SolicitudInversionUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SolicitudInversionUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SolicitudInversion/por-prospecto/{idProspecto}": {
      "get": {
        "tags": [
          "SolicitudInversion"
        ],
        "parameters": [
          {
            "name": "por",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idProspecto",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SolicitudInversion/filtrar": {
      "get": {
        "tags": [
          "SolicitudInversion"
        ],
        "parameters": [
          {
            "name": "por",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SolicitudInversion/detalle/{id}": {
      "get": {
        "tags": [
          "SolicitudInversion"
        ],
        "summary": "Obtiene el detalle completo de una solicitud por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id de la solicitud.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SolicitudInversion/finalizar": {
      "post": {
        "tags": [
          "SolicitudInversion"
        ],
        "summary": "Ejecuta el proceso de finalización de una solicitud de inversión, generando tareas y contrato asociado.",
        "requestBody": {
          "description": "DTO con el Id de la solicitud a finalizar.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinalizarSolicitudDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinalizarSolicitudDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FinalizarSolicitudDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Tarea": {
      "get": {
        "tags": [
          "Tarea"
        ],
        "summary": "Obtiene todas las tareas existentes en el sistema.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Tarea/por-rol/{idRol}": {
      "get": {
        "tags": [
          "Tarea"
        ],
        "summary": "Obtiene las tareas asignadas a un rol específico.",
        "parameters": [
          {
            "name": "idRol",
            "in": "path",
            "description": "Identificador del rol.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Tarea/por-solicitud/{idSolicitud}": {
      "get": {
        "tags": [
          "Tarea"
        ],
        "summary": "Obtiene las tareas asociadas a una solicitud de inversión específica.",
        "parameters": [
          {
            "name": "idSolicitud",
            "in": "path",
            "description": "Identificador de la solicitud de inversión.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Tarea/{id}": {
      "get": {
        "tags": [
          "Tarea"
        ],
        "summary": "Obtiene el detalle de una tarea específica por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador de la tarea.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Tarea"
        ],
        "summary": "Actualiza dinámicamente una tarea existente, permitiendo modificar campos flexibles.\r\nEl usuario autenticado es tomado del token JWT.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador de la tarea a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "DTO con los datos de actualización.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TareaUpdateDinamicoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TareaUpdateDinamicoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TareaUpdateDinamicoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TipoActividad": {
      "get": {
        "tags": [
          "TipoActividad"
        ],
        "summary": "Obtiene todos los tipos de actividad registrados.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoActividad"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoActividad"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoActividad"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TipoActividad"
        ],
        "summary": "Crea un nuevo tipo de actividad.",
        "requestBody": {
          "description": "Objeto TipoActividad a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoActividad"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoActividad"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoActividad"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TipoActividad"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoActividad"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoActividad"
                }
              }
            }
          }
        }
      }
    },
    "/api/TipoActividad/{id}": {
      "get": {
        "tags": [
          "TipoActividad"
        ],
        "summary": "Obtiene un tipo de actividad por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de actividad.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TipoActividad"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoActividad"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoActividad"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TipoActividad"
        ],
        "summary": "Actualiza un tipo de actividad existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de actividad a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto TipoActividad con los cambios.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoActividad"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoActividad"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoActividad"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "TipoActividad"
        ],
        "summary": "Elimina un tipo de actividad por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de actividad a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TipoCliente": {
      "get": {
        "tags": [
          "TipoCliente"
        ],
        "summary": "Obtiene todos los tipos de cliente registrados.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "TipoCliente"
        ],
        "summary": "Crea un nuevo tipo de cliente.",
        "requestBody": {
          "description": "Objeto TipoCliente a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoCliente"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoCliente"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoCliente"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TipoCliente/{id}": {
      "get": {
        "tags": [
          "TipoCliente"
        ],
        "summary": "Obtiene un tipo de cliente por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de cliente.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "TipoCliente"
        ],
        "summary": "Actualiza un tipo de cliente existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de cliente a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto TipoCliente con los cambios.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoCliente"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoCliente"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoCliente"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "TipoCliente"
        ],
        "summary": "Elimina un tipo de cliente por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de cliente a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TipoCuenta": {
      "get": {
        "tags": [
          "TipoCuenta"
        ],
        "summary": "Obtiene todos los tipos de cuenta registrados.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoCuenta"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoCuenta"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoCuenta"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TipoCuenta"
        ],
        "summary": "Crea un nuevo tipo de cuenta.",
        "requestBody": {
          "description": "Objeto TipoCuenta a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoCuenta"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoCuenta"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoCuenta"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TipoCuenta"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoCuenta"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoCuenta"
                }
              }
            }
          }
        }
      }
    },
    "/api/TipoCuenta/{id}": {
      "get": {
        "tags": [
          "TipoCuenta"
        ],
        "summary": "Obtiene un tipo de cuenta por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de cuenta.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TipoCuenta"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoCuenta"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoCuenta"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TipoCuenta"
        ],
        "summary": "Actualiza un tipo de cuenta existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de cuenta a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto TipoCuenta con los cambios.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoCuenta"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoCuenta"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoCuenta"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "TipoCuenta"
        ],
        "summary": "Elimina un tipo de cuenta por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de cuenta a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TipoDocumentoCatalogo": {
      "get": {
        "tags": [
          "TipoDocumentoCatalogo"
        ],
        "summary": "Obtiene todos los tipos de documento catalogados.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoDocumentoCatalogo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoDocumentoCatalogo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoDocumentoCatalogo"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TipoDocumentoCatalogo"
        ],
        "summary": "Crea un nuevo tipo de documento catalogado.",
        "requestBody": {
          "description": "Objeto TipoDocumentoCatalogo a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoDocumentoCatalogo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoDocumentoCatalogo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoDocumentoCatalogo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TipoDocumentoCatalogo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoDocumentoCatalogo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoDocumentoCatalogo"
                }
              }
            }
          }
        }
      }
    },
    "/api/TipoDocumentoCatalogo/{id}": {
      "get": {
        "tags": [
          "TipoDocumentoCatalogo"
        ],
        "summary": "Obtiene un tipo de documento catalogado por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de documento.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TipoDocumentoCatalogo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoDocumentoCatalogo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoDocumentoCatalogo"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TipoDocumentoCatalogo"
        ],
        "summary": "Actualiza un tipo de documento catalogado existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de documento a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto TipoDocumentoCatalogo con los cambios.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoDocumentoCatalogo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoDocumentoCatalogo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoDocumentoCatalogo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "TipoDocumentoCatalogo"
        ],
        "summary": "Elimina un tipo de documento catalogado por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de documento a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TipoIdentificacion": {
      "get": {
        "tags": [
          "TipoIdentificacion"
        ],
        "summary": "Obtiene todos los tipos de identificación.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoIdentificacion"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoIdentificacion"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoIdentificacion"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TipoIdentificacion"
        ],
        "summary": "Crea un nuevo tipo de identificación.",
        "requestBody": {
          "description": "Objeto TipoIdentificacion a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoIdentificacion"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoIdentificacion"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoIdentificacion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TipoIdentificacion"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoIdentificacion"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoIdentificacion"
                }
              }
            }
          }
        }
      }
    },
    "/api/TipoIdentificacion/{id}": {
      "get": {
        "tags": [
          "TipoIdentificacion"
        ],
        "summary": "Obtiene un tipo de identificación por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de identificación.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TipoIdentificacion"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoIdentificacion"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoIdentificacion"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TipoIdentificacion"
        ],
        "summary": "Actualiza un tipo de identificación existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de identificación a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto TipoIdentificacion con los cambios.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoIdentificacion"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoIdentificacion"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoIdentificacion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "TipoIdentificacion"
        ],
        "summary": "Elimina un tipo de identificación por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de identificación a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TipoReferencia": {
      "get": {
        "tags": [
          "TipoReferencia"
        ],
        "summary": "Obtiene todos los tipos de referencia.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoReferencia"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoReferencia"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoReferencia"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TipoReferencia"
        ],
        "summary": "Crea un nuevo tipo de referencia.",
        "requestBody": {
          "description": "Objeto TipoReferencia a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoReferencia"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoReferencia"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoReferencia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TipoReferencia"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoReferencia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoReferencia"
                }
              }
            }
          }
        }
      }
    },
    "/api/TipoReferencia/{id}": {
      "get": {
        "tags": [
          "TipoReferencia"
        ],
        "summary": "Obtiene un tipo de referencia por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de referencia.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TipoReferencia"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoReferencia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoReferencia"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TipoReferencia"
        ],
        "summary": "Actualiza un tipo de referencia existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de referencia a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto TipoReferencia con los cambios.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoReferencia"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoReferencia"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoReferencia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "TipoReferencia"
        ],
        "summary": "Elimina un tipo de referencia por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de referencia a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TipoSolicitud": {
      "get": {
        "tags": [
          "TipoSolicitud"
        ],
        "summary": "Obtiene todos los tipos de solicitud.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "TipoSolicitud"
        ],
        "summary": "Crea un nuevo tipo de solicitud.",
        "requestBody": {
          "description": "Objeto TipoSolicitud a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoSolicitud"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoSolicitud"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoSolicitud"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TipoSolicitud/{id}": {
      "get": {
        "tags": [
          "TipoSolicitud"
        ],
        "summary": "Obtiene un tipo de solicitud por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de solicitud.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "TipoSolicitud"
        ],
        "summary": "Actualiza un tipo de solicitud existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de solicitud a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto TipoSolicitud con los cambios.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoSolicitud"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoSolicitud"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoSolicitud"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "TipoSolicitud"
        ],
        "summary": "Elimina un tipo de solicitud por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del tipo de solicitud a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TipoVia": {
      "get": {
        "tags": [
          "TipoVia"
        ],
        "summary": "Obtiene todas las opciones de TipoVia.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoVia"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoVia"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoVia"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TipoVia"
        ],
        "summary": "Crea una nueva opción de TipoVia.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoVia"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoVia"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoVia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TipoVia"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoVia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoVia"
                }
              }
            }
          }
        }
      }
    },
    "/api/TipoVia/{id}": {
      "get": {
        "tags": [
          "TipoVia"
        ],
        "summary": "Obtiene una opción de TipoVia por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TipoVia"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoVia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoVia"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TipoVia"
        ],
        "summary": "Actualiza una opción de TipoVia existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoVia"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoVia"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TipoVia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "TipoVia"
        ],
        "summary": "Elimina una opción de TipoVia por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Usuario/login": {
      "post": {
        "tags": [
          "Usuario"
        ],
        "summary": "Realiza el login del usuario y retorna un token JWT, datos del usuario, roles y permisos.",
        "requestBody": {
          "description": "Objeto con email y contraseña.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Usuario/roles/{idUsuario}": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Obtiene los roles asignados a un usuario específico.",
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "description": "Id del usuario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Usuario/menus/{idUsuario}": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Obtiene los menús permitidos para un usuario según sus roles y permisos.",
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "description": "Id del usuario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Usuario": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Obtiene todos los usuarios registrados.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Usuario"
        ],
        "summary": "Crea un nuevo usuario (registro manual/administrativo).",
        "requestBody": {
          "description": "Objeto usuario a registrar.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Usuario"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Usuario"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Usuario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Usuario/{id}": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Obtiene la información de un usuario específico.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del usuario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Usuario"
        ],
        "summary": "Actualiza los datos de un usuario existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del usuario a actualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto usuario con datos nuevos.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Usuario"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Usuario"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Usuario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Usuario"
        ],
        "summary": "Elimina un usuario por su identificador.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del usuario a eliminar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Usuario/registro-parcial": {
      "post": {
        "tags": [
          "Usuario"
        ],
        "summary": "Realiza el registro parcial de un usuario y envía correo de validación.",
        "requestBody": {
          "description": "DTO con los datos mínimos de registro.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistroParcialDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistroParcialDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegistroParcialDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Usuario/validar-correo": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Valida el correo electrónico de un usuario a través del token recibido por email.",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Token de validación de correo.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Usuario/enviar-codigo-telefono": {
      "post": {
        "tags": [
          "Usuario"
        ],
        "summary": "Envía un código SMS al número del usuario para validación de teléfono.",
        "requestBody": {
          "description": "DTO con idUsuario, número y extensión internacional.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolicitudCodigoTelefonoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SolicitudCodigoTelefonoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SolicitudCodigoTelefonoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Usuario/validar-telefono": {
      "post": {
        "tags": [
          "Usuario"
        ],
        "summary": "Valida el código SMS ingresado por el usuario para activar su teléfono.",
        "requestBody": {
          "description": "DTO con idUsuario y código ingresado.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidacionTelefonoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidacionTelefonoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidacionTelefonoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UsuarioRol": {
      "get": {
        "tags": [
          "UsuarioRol"
        ],
        "summary": "Obtiene todas las relaciones usuario-rol existentes.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "UsuarioRol"
        ],
        "summary": "Asigna un rol a un usuario.",
        "requestBody": {
          "description": "Objeto UsuarioRol con la relación a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioRol"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioRol"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioRol"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "UsuarioRol"
        ],
        "summary": "Actualiza una relación usuario-rol existente.",
        "requestBody": {
          "description": "Objeto UsuarioRol con los datos actualizados.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioRol"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioRol"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioRol"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UsuarioRol/usuario/{idUsuario}": {
      "get": {
        "tags": [
          "UsuarioRol"
        ],
        "summary": "Obtiene todos los roles asignados a un usuario específico.",
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "description": "Id del usuario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UsuarioRol/rol/{idRol}": {
      "get": {
        "tags": [
          "UsuarioRol"
        ],
        "summary": "Obtiene todos los usuarios que tienen asignado un rol específico.",
        "parameters": [
          {
            "name": "idRol",
            "in": "path",
            "description": "Id del rol.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UsuarioRol/{idUsuario}/{idRol}": {
      "delete": {
        "tags": [
          "UsuarioRol"
        ],
        "summary": "Elimina la relación usuario-rol para un usuario y un rol específicos.",
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "description": "Id del usuario.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idRol",
            "in": "path",
            "description": "Id del rol.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Validacion/equifax": {
      "post": {
        "tags": [
          "Validacion"
        ],
        "summary": "Realiza la validación de un usuario/persona a través del servicio Equifax.",
        "requestBody": {
          "description": "Datos requeridos para la consulta Equifax.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EquifaxRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EquifaxRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EquifaxRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna el resultado de la validación Equifax."
          },
          "400": {
            "description": "Si ocurre un error en la validación Equifax."
          }
        }
      }
    },
    "/api/Validacion/lds": {
      "post": {
        "tags": [
          "Validacion"
        ],
        "summary": "Realiza la validación de un usuario/persona a través del servicio LDS.",
        "requestBody": {
          "description": "Datos requeridos para la consulta LDS.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LdsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LdsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LdsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna el resultado de la validación LDS."
          },
          "400": {
            "description": "Si ocurre un error en la validación LDS."
          }
        }
      }
    },
    "/api/vista/{entidad}/filtrar": {
      "get": {
        "tags": [
          "VistaEntidad"
        ],
        "summary": "Obtiene un listado filtrado de una vista dinámica según propiedad y valor.",
        "parameters": [
          {
            "name": "entidad",
            "in": "path",
            "description": "Nombre de la vista (ej: actividad, prospecto, solicitudinversion, etc).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "por",
            "in": "query",
            "description": "Nombre de la propiedad por la que filtrar (ej: IdProspecto, IdCliente).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Valor a buscar en la propiedad.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna el listado filtrado correctamente."
          },
          "400": {
            "description": "Si la entidad no está registrada o parámetros incorrectos."
          },
          "500": {
            "description": "Si hay error al resolver el repositorio."
          }
        }
      }
    },
    "/api/vista/{entidad}": {
      "get": {
        "tags": [
          "VistaEntidad"
        ],
        "summary": "Obtiene todos los registros de la vista especificada.",
        "parameters": [
          {
            "name": "entidad",
            "in": "path",
            "description": "Nombre de la vista/entidad (ej: actividad, prospecto, solicitud, etc).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna la lista completa."
          },
          "400": {
            "description": "Si la entidad no está registrada."
          },
          "500": {
            "description": "Si no se puede resolver el repositorio."
          }
        }
      }
    },
    "/api/vista/solicitudinversion/filtrarDTO": {
      "get": {
        "tags": [
          "VistaEntidad"
        ],
        "summary": "Filtra la vista SolicitudInversionDetalle por propiedad específica y retorna una lista de DTOs.",
        "parameters": [
          {
            "name": "por",
            "in": "query",
            "description": "Propiedad por la que filtrar (prospecto, cliente, solicitud).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Valor a buscar en la propiedad.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna la lista filtrada de DTOs."
          },
          "400": {
            "description": "Si el parámetro 'por' es inválido."
          },
          "500": {
            "description": "Si ocurre un error interno."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Actividad": {
        "type": "object",
        "properties": {
          "idActividad": {
            "type": "integer",
            "format": "int32"
          },
          "idTipoActividad": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "asunto": {
            "type": "string",
            "nullable": true
          },
          "descripcion": {
            "type": "string",
            "nullable": true
          },
          "duracion": {
            "type": "string",
            "format": "date-span",
            "nullable": true
          },
          "vencimiento": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "idPrioridad": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "estado": {
            "type": "boolean"
          },
          "idProspecto": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idUsuarioPropietario": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fechaCreacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActividadEconomicaLugarTrabajo": {
        "type": "object",
        "properties": {
          "idActividadEconomicaLugarTrabajo": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActividadEconomicaPrincipal": {
        "type": "object",
        "properties": {
          "idActividadEconomicaPrincipal": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActividadEconomicaUpdateDTO": {
        "type": "object",
        "properties": {
          "idActividadEconomicaPrincipal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idActividadEconomicaLugarTrabajo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lugarTrabajo": {
            "type": "string",
            "nullable": true
          },
          "correoTrabajo": {
            "type": "string",
            "nullable": true
          },
          "otraActividadEconomica": {
            "type": "string",
            "nullable": true
          },
          "cargo": {
            "type": "string",
            "nullable": true
          },
          "antiguedad": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "telefonoTrabajo": {
            "type": "string",
            "nullable": true
          },
          "fechaInicioActividad": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "direccionTrabajo": {
            "type": "string",
            "nullable": true
          },
          "referenciaDireccionTrabajo": {
            "type": "string",
            "nullable": true
          },
          "esPEP": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdendumCreateDto": {
        "type": "object",
        "properties": {
          "idInversion": {
            "type": "integer",
            "format": "int32"
          },
          "idProyeccionOriginal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "periodoIncremento": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "montoIncremento": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "idUsuarioCreacion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AdendumSetIncrementoDto": {
        "type": "object",
        "properties": {
          "idAdendum": {
            "type": "integer",
            "format": "int32"
          },
          "idProyeccionIncremento": {
            "type": "integer",
            "format": "int32"
          },
          "idCronogramaProyeccionIncremento": {
            "type": "integer",
            "format": "int32"
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "format": "int32"
          },
          "incrementoGenerado": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AdendumUpdateDto": {
        "type": "object",
        "properties": {
          "idAdendum": {
            "type": "integer",
            "format": "int32"
          },
          "estado": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "generarDocumentos": {
            "type": "boolean",
            "nullable": true
          },
          "continuarFlujo": {
            "type": "boolean",
            "nullable": true
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdjuntosUpdateDTO": {
        "type": "object",
        "properties": {
          "idModoFirma": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "verDocumentosRequeridos": {
            "type": "boolean",
            "nullable": true
          },
          "confirmaCargaDocumentosCorrectos": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Agencia": {
        "type": "object",
        "properties": {
          "idAgencia": {
            "type": "integer",
            "format": "int32"
          },
          "ciudad": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Banco": {
        "type": "object",
        "properties": {
          "idBanco": {
            "type": "integer",
            "format": "int32"
          },
          "idTipoBanco": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bancoNombre": {
            "type": "string",
            "nullable": true
          },
          "fechaCreacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fechaModificacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "idUsuarioCreacion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "codigoBanco": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BancoUpdateDTO": {
        "type": "object",
        "properties": {
          "idBanco": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idTipoCuenta": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "numeroCuenta": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Beneficiario": {
        "required": [
          "nombre",
          "numeroDocumento",
          "porcentajeBeneficio"
        ],
        "type": "object",
        "properties": {
          "idBeneficiario": {
            "type": "integer",
            "format": "int32"
          },
          "idSolicitudInversion": {
            "type": "integer",
            "format": "int32"
          },
          "idTipoDocumento": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "minLength": 1,
            "type": "string"
          },
          "numeroDocumento": {
            "minLength": 1,
            "type": "string"
          },
          "porcentajeBeneficio": {
            "type": "number",
            "format": "double"
          },
          "telefono": {
            "type": "string",
            "nullable": true
          },
          "correoElectronico": {
            "type": "string",
            "nullable": true
          },
          "direccion": {
            "type": "string",
            "nullable": true
          },
          "fechaCreacion": {
            "type": "string",
            "format": "date-time"
          },
          "fechaModificacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "idUsuarioCreacion": {
            "type": "integer",
            "format": "int32"
          },
          "idUsuarioPropietario": {
            "type": "integer",
            "format": "int32"
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalendarioOperaciones": {
        "type": "object",
        "properties": {
          "idCalendario": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "fechaCorte": {
            "type": "string",
            "format": "date-time"
          },
          "calendarioInversiones": {
            "type": "string",
            "nullable": true
          },
          "fechaGenerarPagos": {
            "type": "string",
            "format": "date-time"
          },
          "fechaEnvioEECC": {
            "type": "string",
            "format": "date-time"
          },
          "estadoProcesoPagos": {
            "type": "boolean"
          },
          "estadoProcesoEnvioEECC": {
            "type": "boolean"
          },
          "estadoCalendario": {
            "type": "boolean"
          },
          "fechaCreacion": {
            "type": "string",
            "format": "date-time"
          },
          "fechaModificacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "idUsuarioCreacion": {
            "type": "integer",
            "format": "int32"
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idUsuarioPropietario": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CalendarioOperacionesUpdateDTO": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "fechaCorte": {
            "type": "string",
            "format": "date-time"
          },
          "calendarioInversiones": {
            "type": "string",
            "nullable": true
          },
          "fechaGenerarPagos": {
            "type": "string",
            "format": "date-time"
          },
          "fechaEnvioEECC": {
            "type": "string",
            "format": "date-time"
          },
          "estadoProcesoPagos": {
            "type": "boolean"
          },
          "estadoProcesoEnvioEECC": {
            "type": "boolean"
          },
          "estadoCalendario": {
            "type": "boolean"
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CasoCreateDTO": {
        "type": "object",
        "properties": {
          "idCliente": {
            "type": "integer",
            "format": "int32"
          },
          "idMotivo": {
            "type": "integer",
            "format": "int32"
          },
          "descripcion": {
            "type": "string",
            "nullable": true
          },
          "idInversion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idPago": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "datosEspecificos": {
            "type": "string",
            "nullable": true
          },
          "continuarCaso": {
            "type": "boolean"
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "idUsuarioCreacion": {
            "type": "integer",
            "format": "int32"
          },
          "idUsuarioPropietario": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CasoUpdateDTO": {
        "type": "object",
        "properties": {
          "descripcion": {
            "type": "string",
            "nullable": true
          },
          "continuarCaso": {
            "type": "boolean"
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "format": "int32"
          },
          "idUsuarioPropietario": {
            "type": "integer",
            "format": "int32"
          },
          "datosEspecificos": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CasosPorMotivoDTO": {
        "type": "object",
        "properties": {
          "motivoNombre": {
            "type": "string",
            "nullable": true
          },
          "totalCasos": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CasosPorUsuarioDTO": {
        "type": "object",
        "properties": {
          "nombreUsuarioCreacion": {
            "type": "string",
            "nullable": true
          },
          "totalCasos": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CasosTerminacionDTO": {
        "type": "object",
        "properties": {
          "motivoNombre": {
            "type": "string",
            "nullable": true
          },
          "totalCasos": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Ciudad": {
        "type": "object",
        "properties": {
          "idCiudad": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "codigoCiudad": {
            "type": "string",
            "nullable": true
          },
          "codigoPadre": {
            "type": "string",
            "nullable": true
          },
          "idProvincia": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ClienteActividadEconomica": {
        "type": "object",
        "properties": {
          "idCliente": {
            "type": "integer",
            "format": "int32"
          },
          "idActividadPrincipal": {
            "type": "integer",
            "format": "int32"
          },
          "idActividadLugarTrabajo": {
            "type": "integer",
            "format": "int32"
          },
          "lugarTrabajo": {
            "type": "string",
            "nullable": true
          },
          "correoTrabajo": {
            "type": "string",
            "nullable": true
          },
          "otraActividad": {
            "type": "string",
            "nullable": true
          },
          "cargo": {
            "type": "string",
            "nullable": true
          },
          "antiguedad": {
            "type": "integer",
            "format": "int32"
          },
          "telefonoTrabajo": {
            "type": "string",
            "nullable": true
          },
          "fechaInicioActividad": {
            "type": "string",
            "format": "date-time"
          },
          "direccionTrabajo": {
            "type": "string",
            "nullable": true
          },
          "referenciaDireccionTrabajo": {
            "type": "string",
            "nullable": true
          },
          "esPEP": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ClienteContacto": {
        "type": "object",
        "properties": {
          "idCliente": {
            "type": "integer",
            "format": "int32"
          },
          "correoElectronico": {
            "type": "string",
            "nullable": true
          },
          "telefonoCelular": {
            "type": "string",
            "nullable": true
          },
          "otroTelefono": {
            "type": "string",
            "nullable": true
          },
          "telefonoFijo": {
            "type": "string",
            "nullable": true
          },
          "idTipoVia": {
            "type": "integer",
            "format": "int32"
          },
          "callePrincipal": {
            "type": "string",
            "nullable": true
          },
          "numeroDomicilio": {
            "type": "string",
            "nullable": true
          },
          "calleSecundaria": {
            "type": "string",
            "nullable": true
          },
          "referenciaDomicilio": {
            "type": "string",
            "nullable": true
          },
          "sectorBarrio": {
            "type": "string",
            "nullable": true
          },
          "tiempoResidencia": {
            "type": "integer",
            "format": "int32"
          },
          "idPaisResidencia": {
            "type": "integer",
            "format": "int32"
          },
          "idProvinciaResidencia": {
            "type": "integer",
            "format": "int32"
          },
          "idCiudadResidencia": {
            "type": "integer",
            "format": "int32"
          },
          "residenteOtroPais": {
            "type": "boolean"
          },
          "contribuyenteEEUU": {
            "type": "boolean"
          },
          "numeroIdentificacionOtroPais": {
            "type": "string",
            "nullable": true
          },
          "numeroIdentificacionEEUU": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClienteCuentaBancaria": {
        "type": "object",
        "properties": {
          "idCliente": {
            "type": "integer",
            "format": "int32"
          },
          "idBanco": {
            "type": "integer",
            "format": "int32"
          },
          "idTipoCuenta": {
            "type": "integer",
            "format": "int32"
          },
          "numeroCuenta": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClienteEconomico": {
        "type": "object",
        "properties": {
          "idCliente": {
            "type": "integer",
            "format": "int32"
          },
          "totalIngresosMensuales": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalEgresosMensuales": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalActivos": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalPasivos": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "activosMuebles": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "activosInmuebles": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "activosTitulosValor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ingresosFijos": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ingresosVariables": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "origenIngresoVariable": {
            "type": "string",
            "nullable": true
          },
          "patrimonioNeto": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClienteUpdateDTO": {
        "type": "object",
        "properties": {
          "idCliente": {
            "type": "integer",
            "format": "int32"
          },
          "idGenero": {
            "type": "integer",
            "format": "int32"
          },
          "idEstadoCivil": {
            "type": "integer",
            "format": "int32"
          },
          "idNacionalidad": {
            "type": "integer",
            "format": "int32"
          },
          "idNivelAcademico": {
            "type": "integer",
            "format": "int32"
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "format": "int32"
          },
          "contacto": {
            "$ref": "#/components/schemas/ClienteContacto"
          },
          "actividadEconomica": {
            "$ref": "#/components/schemas/ClienteActividadEconomica"
          },
          "cuentaBancaria": {
            "$ref": "#/components/schemas/ClienteCuentaBancaria"
          },
          "datosEconomicos": {
            "$ref": "#/components/schemas/ClienteEconomico"
          }
        },
        "additionalProperties": false
      },
      "ClientesPorEdadDTO": {
        "type": "object",
        "properties": {
          "rangoEdad": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ClientesPorGeneroDTO": {
        "type": "object",
        "properties": {
          "genero": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ClientesPorIdentificacionDTO": {
        "type": "object",
        "properties": {
          "tipoIdentificacion": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ClientesPorMesDTO": {
        "type": "object",
        "properties": {
          "año": {
            "type": "integer",
            "format": "int32"
          },
          "mes": {
            "type": "integer",
            "format": "int32"
          },
          "totalClientes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ClientesPorNacionalidadDTO": {
        "type": "object",
        "properties": {
          "nacionalidad": {
            "type": "string",
            "nullable": true
          },
          "totalClientes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ClientesPorPaisDTO": {
        "type": "object",
        "properties": {
          "pais": {
            "type": "string",
            "nullable": true
          },
          "totalClientes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ClientesPorTipoDTO": {
        "type": "object",
        "properties": {
          "tipoCliente": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConfiguracionesProducto": {
        "type": "object",
        "properties": {
          "idConfiguraciones": {
            "type": "integer",
            "format": "int32"
          },
          "montoMinimo": {
            "type": "number",
            "format": "double"
          },
          "montoMaximo": {
            "type": "number",
            "format": "double"
          },
          "plazo": {
            "type": "integer",
            "format": "int32"
          },
          "taza": {
            "type": "number",
            "format": "double"
          },
          "idOrigen": {
            "type": "integer",
            "format": "int32"
          },
          "idTipoTasa": {
            "type": "integer",
            "format": "int32"
          },
          "idProducto": {
            "type": "integer",
            "format": "int32"
          },
          "costeOperativoEEUU": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "idUsuarioCreacion": {
            "type": "integer",
            "format": "int32"
          },
          "fechaCreacion": {
            "type": "string",
            "format": "date-time"
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fechaModificacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactoUbicacionUpdateDTO": {
        "type": "object",
        "properties": {
          "correoElectronico": {
            "type": "string",
            "nullable": true
          },
          "otroTelefono": {
            "type": "string",
            "nullable": true
          },
          "telefonoCelular": {
            "type": "string",
            "nullable": true
          },
          "telefonoFijo": {
            "type": "string",
            "nullable": true
          },
          "idTipoVia": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "callePrincipal": {
            "type": "string",
            "nullable": true
          },
          "numeroDomicilio": {
            "type": "string",
            "nullable": true
          },
          "calleSecundaria": {
            "type": "string",
            "nullable": true
          },
          "referenciaDomicilio": {
            "type": "string",
            "nullable": true
          },
          "sectorBarrio": {
            "type": "string",
            "nullable": true
          },
          "tiempoResidencia": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idPaisResidencia": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idProvinciaResidencia": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCiudadResidencia": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "residenteOtroPais": {
            "type": "boolean",
            "nullable": true
          },
          "contribuyenteEEUU": {
            "type": "boolean",
            "nullable": true
          },
          "numeroIdentificacionOtroPais": {
            "type": "string",
            "nullable": true
          },
          "numeroIdentificacionEEUU": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContinuarSolicitud": {
        "type": "object",
        "properties": {
          "idContinuarSolicitud": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DatosEconomicosUpdateDTO": {
        "type": "object",
        "properties": {
          "totalIngresosMensuales": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalEgresosMensuales": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalActivos": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalPasivos": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "activosMuebles": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "activosInmuebles": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "activosTitulosValor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ingresosFijos": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ingresosVariables": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "origenIngresoVariable": {
            "type": "string",
            "nullable": true
          },
          "patrimonioNeto": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DatosGeneralesUpdateDTO": {
        "type": "object",
        "properties": {
          "fechaNacimiento": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "idGenero": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idEstadoCivil": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idNivelAcademico": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "numeroCargasFamiliares": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idNacionalidad": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idProfesion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idEtnia": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocumentoActualizarDto": {
        "type": "object",
        "properties": {
          "base64Contenido": {
            "type": "string",
            "nullable": true
          },
          "observaciones": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocumentoCargaDto": {
        "type": "object",
        "properties": {
          "idTipoDocumento": {
            "type": "integer",
            "format": "int32"
          },
          "idTarea": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSolicitudInversion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idInversion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "documentoNombre": {
            "type": "string",
            "nullable": true
          },
          "base64Contenido": {
            "type": "string",
            "nullable": true
          },
          "observaciones": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocumentoMotivoDto": {
        "type": "object",
        "properties": {
          "idMotivo": {
            "type": "integer",
            "format": "int32"
          },
          "idTarea": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSolicitudInversion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idInversion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EquifaxRequestDto": {
        "type": "object",
        "properties": {
          "tipoDocumento": {
            "type": "string",
            "nullable": true
          },
          "numeroDocumento": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EstadisticasClienteDTO": {
        "type": "object",
        "properties": {
          "totalClientes": {
            "type": "integer",
            "format": "int32"
          },
          "porMes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientesPorMesDTO"
            },
            "nullable": true
          },
          "porGenero": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientesPorGeneroDTO"
            },
            "nullable": true
          },
          "porTipoCliente": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientesPorTipoDTO"
            },
            "nullable": true
          },
          "porTipoIdentificacion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientesPorIdentificacionDTO"
            },
            "nullable": true
          },
          "totalPEP": {
            "type": "integer",
            "format": "int32"
          },
          "totalResidentesExterior": {
            "type": "integer",
            "format": "int32"
          },
          "porEdad": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientesPorEdadDTO"
            },
            "nullable": true
          },
          "totalCtasExterior": {
            "type": "integer",
            "format": "int32"
          },
          "totalContribuyentesEEUU": {
            "type": "integer",
            "format": "int32"
          },
          "porPais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientesPorPaisDTO"
            },
            "nullable": true
          },
          "porNacionalidad": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientesPorNacionalidadDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EstadisticasInversionDTO": {
        "type": "object",
        "properties": {
          "totalInversiones": {
            "type": "integer",
            "format": "int32"
          },
          "totalCapitalInvertido": {
            "type": "number",
            "format": "double"
          },
          "totalRentabilidad": {
            "type": "number",
            "format": "double"
          },
          "porProducto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InversionesPorProductoDTO"
            },
            "nullable": true
          },
          "porMes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InversionesPorMesDTO"
            },
            "nullable": true
          },
          "porTipoCliente": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InversionesPorTipoClienteDTO"
            },
            "nullable": true
          },
          "porEstado": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InversionesPorEstadoDTO"
            },
            "nullable": true
          },
          "rendimientoPromedio": {
            "type": "number",
            "format": "double"
          },
          "porPlazo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InversionesPorPlazoDTO"
            },
            "nullable": true
          },
          "rankingClientes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RankingClienteInversionDTO"
            },
            "nullable": true
          },
          "porPais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InversionesPorPaisDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EstadisticasPagosCasosDTO": {
        "type": "object",
        "properties": {
          "pagosPorCalendario": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PagosPorCalendarioDTO"
            },
            "nullable": true
          },
          "pagosConfirmadosDescartados": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PagosConfirmadosDescartadosDTO"
            },
            "nullable": true
          },
          "casosPorMotivo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CasosPorMotivoDTO"
            },
            "nullable": true
          },
          "pagosPorMotivo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PagosPorMotivoDTO"
            },
            "nullable": true
          },
          "estadoCasosPago": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EstadoCasosPagoDTO"
            },
            "nullable": true
          },
          "pagosUltimoCalendario": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PagosUltimoCalendarioDTO"
            },
            "nullable": true
          },
          "casosTerminacion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CasosTerminacionDTO"
            },
            "nullable": true
          },
          "montoPagadoPorCalendario": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MontoPagadoPorCalendarioDTO"
            },
            "nullable": true
          },
          "pagosPendientesPorCliente": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PagosPendientesClienteDTO"
            },
            "nullable": true
          },
          "casosPorUsuario": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CasosPorUsuarioDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EstadisticasProspectosDTO": {
        "type": "object",
        "properties": {
          "activos": {
            "type": "integer",
            "format": "int32"
          },
          "inactivos": {
            "type": "integer",
            "format": "int32"
          },
          "convertidos": {
            "type": "integer",
            "format": "int32"
          },
          "noConvertidos": {
            "type": "integer",
            "format": "int32"
          },
          "porcentajeConversion": {
            "type": "number",
            "format": "double"
          },
          "porProductoInteres": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProspectosPorProductoDTO"
            },
            "nullable": true
          },
          "porOrigen": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProspectosPorOrigenDTO"
            },
            "nullable": true
          },
          "porMes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProspectosPorMesDTO"
            },
            "nullable": true
          },
          "prospectosConSolicitud": {
            "type": "integer",
            "format": "int32"
          },
          "prospectosSinSolicitud": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EstadisticasSolicitudDTO": {
        "type": "object",
        "properties": {
          "porEstado": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SolicitudesPorEstadoDTO"
            },
            "nullable": true
          },
          "totalCompletadas": {
            "type": "integer",
            "format": "int32"
          },
          "porcentajeConversion": {
            "type": "number",
            "format": "double"
          },
          "estadoPorProspecto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SolicitudProspectoEstadoDTO"
            },
            "nullable": true
          },
          "porMes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SolicitudesPorMesDTO"
            },
            "nullable": true
          },
          "solicitudesConProyeccion": {
            "type": "integer",
            "format": "int32"
          },
          "solicitudesConProyeccionDetalle": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SolicitudProyeccionDetalleDTO"
            },
            "nullable": true
          },
          "kpiFinanciero": {
            "$ref": "#/components/schemas/KPIFinancieroSolicitudesDTO"
          },
          "proyeccionesPorProducto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SolicitudProyeccionPorProductoDTO"
            },
            "nullable": true
          },
          "solicitudesConProyeccionTotal": {
            "type": "integer",
            "format": "int32"
          },
          "solicitudesSinProyeccionTotal": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EstadisticasTareasDTO": {
        "type": "object",
        "properties": {
          "conteoPorSolicitudEstado": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TareasPorSolicitudEstadoDTO"
            },
            "nullable": true
          },
          "matrizGlobalPorTipoEstado": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TareasPorTipoEstadoGlobalDTO"
            },
            "nullable": true
          },
          "pendientesPorSolicitud": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TareasPendientesPorSolicitudDTO"
            },
            "nullable": true
          },
          "contratosFirmados": {
            "type": "integer",
            "format": "int32"
          },
          "reporteCumplimiento": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReporteCumplimientoSolicitudDTO"
            },
            "nullable": true
          },
          "pendientesPorTipoGlobal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TareasPendientesGlobalDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EstadoCasosPagoDTO": {
        "type": "object",
        "properties": {
          "motivoNombre": {
            "type": "string",
            "nullable": true
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "totalCasos": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EstadoCivil": {
        "type": "object",
        "properties": {
          "idEstadoCivil": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Etnia": {
        "type": "object",
        "properties": {
          "idEtnia": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FinalizacionUpdateDTO": {
        "type": "object",
        "properties": {
          "numeroContrato": {
            "type": "string",
            "nullable": true
          },
          "idContinuarSolicitud": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "motivoFinalizacion": {
            "type": "string",
            "nullable": true
          },
          "observacionFinalizacion": {
            "type": "string",
            "nullable": true
          },
          "confirmar": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FinalizarSolicitudDto": {
        "type": "object",
        "properties": {
          "idSolicitudInversion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenerarContratoRequest": {
        "type": "object",
        "properties": {
          "idSolicitudInversion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenerarPagosCalendarioDTO": {
        "type": "object",
        "properties": {
          "idCalendario": {
            "type": "integer",
            "description": "Identificador del calendario.",
            "format": "int32"
          },
          "idPago": {
            "type": "integer",
            "description": "Identificador del pago (opcional o según la lógica).",
            "format": "int32"
          },
          "idUsuario": {
            "type": "integer",
            "description": "Identificador del usuario que realiza la acción.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "DTO auxiliar para la generación automática de pagos por calendario."
      },
      "Genero": {
        "type": "object",
        "properties": {
          "idGenero": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentificacionCreateDTO": {
        "type": "object",
        "properties": {
          "tipoSolicitud": {
            "type": "integer",
            "format": "int32"
          },
          "tipoCliente": {
            "type": "integer",
            "format": "int32"
          },
          "tipoDocumento": {
            "type": "integer",
            "format": "int32"
          },
          "numeroDocumento": {
            "type": "string",
            "nullable": true
          },
          "nombres": {
            "type": "string",
            "nullable": true
          },
          "apellidoPaterno": {
            "type": "string",
            "nullable": true
          },
          "apellidoMaterno": {
            "type": "string",
            "nullable": true
          },
          "validar": {
            "type": "boolean"
          },
          "equifax": {
            "type": "string",
            "nullable": true
          },
          "obsEquifax": {
            "type": "string",
            "nullable": true
          },
          "listasControl": {
            "type": "string",
            "nullable": true
          },
          "obsListasControl": {
            "type": "string",
            "nullable": true
          },
          "continuar": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentificacionUpdateDTO": {
        "type": "object",
        "properties": {
          "tipoSolicitud": {
            "type": "integer",
            "format": "int32"
          },
          "tipoCliente": {
            "type": "integer",
            "format": "int32"
          },
          "tipoDocumento": {
            "type": "integer",
            "format": "int32"
          },
          "numeroDocumento": {
            "type": "string",
            "nullable": true
          },
          "nombres": {
            "type": "string",
            "nullable": true
          },
          "apellidoPaterno": {
            "type": "string",
            "nullable": true
          },
          "apellidoMaterno": {
            "type": "string",
            "nullable": true
          },
          "validar": {
            "type": "boolean"
          },
          "equifax": {
            "type": "string",
            "nullable": true
          },
          "obsEquifax": {
            "type": "string",
            "nullable": true
          },
          "listasControl": {
            "type": "string",
            "nullable": true
          },
          "obsListasControl": {
            "type": "string",
            "nullable": true
          },
          "continuar": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InversionesPorEstadoDTO": {
        "type": "object",
        "properties": {
          "estadoInversion": {
            "type": "string",
            "nullable": true
          },
          "totalInversiones": {
            "type": "integer",
            "format": "int32"
          },
          "capitalInvertido": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "InversionesPorMesDTO": {
        "type": "object",
        "properties": {
          "año": {
            "type": "integer",
            "format": "int32"
          },
          "mes": {
            "type": "integer",
            "format": "int32"
          },
          "totalInversiones": {
            "type": "integer",
            "format": "int32"
          },
          "capitalInvertido": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "InversionesPorPaisDTO": {
        "type": "object",
        "properties": {
          "pais": {
            "type": "string",
            "nullable": true
          },
          "totalInversiones": {
            "type": "integer",
            "format": "int32"
          },
          "capitalInvertido": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "InversionesPorPlazoDTO": {
        "type": "object",
        "properties": {
          "plazo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalInversiones": {
            "type": "integer",
            "format": "int32"
          },
          "capitalInvertido": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "InversionesPorProductoDTO": {
        "type": "object",
        "properties": {
          "idProducto": {
            "type": "integer",
            "format": "int32"
          },
          "productoNombre": {
            "type": "string",
            "nullable": true
          },
          "totalInversiones": {
            "type": "integer",
            "format": "int32"
          },
          "capitalInvertido": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "InversionesPorTipoClienteDTO": {
        "type": "object",
        "properties": {
          "tipoCliente": {
            "type": "string",
            "nullable": true
          },
          "totalInversiones": {
            "type": "integer",
            "format": "int32"
          },
          "capitalInvertido": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "JustificativoTransaccion": {
        "type": "object",
        "properties": {
          "idJustificativoTransaccion": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "KPIFinancieroSolicitudesDTO": {
        "type": "object",
        "properties": {
          "capitalTotal": {
            "type": "number",
            "format": "double"
          },
          "tasaPromedio": {
            "type": "number",
            "format": "double"
          },
          "plazoPromedio": {
            "type": "number",
            "format": "double"
          },
          "totalProyecciones": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LdsRequestDto": {
        "type": "object",
        "properties": {
          "identificacion": {
            "type": "string",
            "nullable": true
          },
          "primerNombre": {
            "type": "string",
            "nullable": true
          },
          "segundoNombre": {
            "type": "string",
            "nullable": true
          },
          "primerApellido": {
            "type": "string",
            "nullable": true
          },
          "segundoApellido": {
            "type": "string",
            "nullable": true
          },
          "nombreCompleto": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "required": [
          "contraseña",
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "contraseña": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Menu": {
        "type": "object",
        "properties": {
          "idMenu": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "icono": {
            "type": "string",
            "nullable": true
          },
          "orden": {
            "type": "integer",
            "format": "int32"
          },
          "estado": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ModoFirma": {
        "type": "object",
        "properties": {
          "idModoFirma": {
            "type": "integer",
            "format": "int32"
          },
          "nombreModoFirma": {
            "type": "string",
            "nullable": true
          },
          "fechaCreacion": {
            "type": "string",
            "format": "date-time"
          },
          "idUsuarioCreacion": {
            "type": "integer",
            "format": "int32"
          },
          "fechaModificacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MontoPagadoPorCalendarioDTO": {
        "type": "object",
        "properties": {
          "nombreCalendario": {
            "type": "string",
            "nullable": true
          },
          "fechaCorte": {
            "type": "string",
            "format": "date-time"
          },
          "montoTotalPagado": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Nacionalidad": {
        "type": "object",
        "properties": {
          "idNacionalidad": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrigenCliente": {
        "type": "object",
        "properties": {
          "idOrigenCliente": {
            "type": "integer",
            "format": "int32"
          },
          "nombreOrigen": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagoCreateDTO": {
        "type": "object",
        "properties": {
          "idCalendario": {
            "type": "integer",
            "format": "int32"
          },
          "cantidadPagos": {
            "type": "integer",
            "format": "int32"
          },
          "descartarPagos": {
            "type": "boolean"
          },
          "generarPagos": {
            "type": "boolean"
          },
          "detalle": {
            "type": "string",
            "nullable": true
          },
          "confirmarRegistrosPagos": {
            "type": "boolean"
          },
          "idUsuarioCreacion": {
            "type": "integer",
            "format": "int32"
          },
          "idUsuarioPropietario": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagoUpdateDTO": {
        "type": "object",
        "properties": {
          "cantidadPagos": {
            "type": "integer",
            "format": "int32"
          },
          "descartarPagos": {
            "type": "boolean"
          },
          "generarPagos": {
            "type": "boolean"
          },
          "detalle": {
            "type": "string",
            "nullable": true
          },
          "confirmarRegistrosPagos": {
            "type": "boolean"
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "format": "int32"
          },
          "idUsuarioPropietario": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagosConfirmadosDescartadosDTO": {
        "type": "object",
        "properties": {
          "idCalendario": {
            "type": "integer",
            "format": "int32"
          },
          "nombreCalendario": {
            "type": "string",
            "nullable": true
          },
          "fechaCorte": {
            "type": "string",
            "format": "date-time"
          },
          "pagosConfirmados": {
            "type": "integer",
            "format": "int32"
          },
          "pagosDescartados": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagosPendientesClienteDTO": {
        "type": "object",
        "properties": {
          "nombreCliente": {
            "type": "string",
            "nullable": true
          },
          "pagosPendientes": {
            "type": "integer",
            "format": "int32"
          },
          "montoPendiente": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PagosPorCalendarioDTO": {
        "type": "object",
        "properties": {
          "idCalendario": {
            "type": "integer",
            "format": "int32"
          },
          "nombreCalendario": {
            "type": "string",
            "nullable": true
          },
          "fechaCorte": {
            "type": "string",
            "format": "date-time"
          },
          "totalPagos": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagosPorMotivoDTO": {
        "type": "object",
        "properties": {
          "motivoNombre": {
            "type": "string",
            "nullable": true
          },
          "totalPagos": {
            "type": "integer",
            "format": "int32"
          },
          "montoTotal": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PagosUltimoCalendarioDTO": {
        "type": "object",
        "properties": {
          "nombreCalendario": {
            "type": "string",
            "nullable": true
          },
          "totalPagos": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Pais": {
        "type": "object",
        "properties": {
          "idPais": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Permiso": {
        "type": "object",
        "properties": {
          "idPermiso": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "descripcion": {
            "type": "string",
            "nullable": true
          },
          "estado": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Prioridad": {
        "type": "object",
        "properties": {
          "idPrioridad": {
            "type": "integer",
            "format": "int32"
          },
          "categoria": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Producto": {
        "type": "object",
        "properties": {
          "idProducto": {
            "type": "integer",
            "format": "int32"
          },
          "productoNombre": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nombreComercial": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "productoCodigo": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "iniciales": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "descripcion": {
            "type": "string",
            "nullable": true
          },
          "idFormaPago": {
            "type": "integer",
            "format": "int32"
          },
          "periocidad": {
            "type": "integer",
            "format": "int32"
          },
          "montoMinimoIncremento": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "penalidad": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "idUsuarioCreacion": {
            "type": "integer",
            "format": "int32"
          },
          "fechaCreacion": {
            "type": "string",
            "format": "date-time"
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fechaModificacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductoInteres": {
        "type": "object",
        "properties": {
          "idProductoInteres": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Profesion": {
        "type": "object",
        "properties": {
          "idProfesion": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Prospecto": {
        "type": "object",
        "properties": {
          "idProspecto": {
            "type": "integer",
            "format": "int32"
          },
          "nombres": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "apellidoPaterno": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "apellidoMaterno": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "idTipoIdentificacion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tipoIdentificacion": {
            "$ref": "#/components/schemas/TipoIdentificacion"
          },
          "idOrigenCliente": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "origenCliente": {
            "$ref": "#/components/schemas/OrigenCliente"
          },
          "idProductoInteres": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "telefonoCelular": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "correoElectronico": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "idAgencia": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agencia": {
            "$ref": "#/components/schemas/Agencia"
          },
          "fechaCreacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fechaModificacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "estado": {
            "type": "boolean",
            "nullable": true
          },
          "esCliente": {
            "type": "boolean",
            "nullable": true
          },
          "idUsuarioPropietario": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProspectosPorMesDTO": {
        "type": "object",
        "properties": {
          "año": {
            "type": "integer",
            "format": "int32"
          },
          "mes": {
            "type": "integer",
            "format": "int32"
          },
          "totalProspectos": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProspectosPorOrigenDTO": {
        "required": [
          "nombreOrigen"
        ],
        "type": "object",
        "properties": {
          "nombreOrigen": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProspectosPorProductoDTO": {
        "required": [
          "productoInteres"
        ],
        "type": "object",
        "properties": {
          "productoInteres": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Provincia": {
        "type": "object",
        "properties": {
          "idProvincia": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "codigoProvincia": {
            "type": "string",
            "nullable": true
          },
          "codigoPadre": {
            "type": "string",
            "nullable": true
          },
          "idPais": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProyeccionCreateDto": {
        "type": "object",
        "properties": {
          "idUsuario": {
            "type": "integer",
            "format": "int32"
          },
          "idProducto": {
            "type": "integer",
            "format": "int32"
          },
          "capital": {
            "type": "number",
            "format": "double"
          },
          "aporteAdicional": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "plazo": {
            "type": "integer",
            "format": "int32"
          },
          "fechaInicial": {
            "type": "string",
            "format": "date-time"
          },
          "idOrigenCapital": {
            "type": "integer",
            "format": "int32"
          },
          "idOrigenIncremento": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSolicitudInversion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "costeOperativo": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "costeNotarizacion": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProyeccionIncrementoDto": {
        "type": "object",
        "properties": {
          "idProyeccionOriginal": {
            "type": "integer",
            "format": "int32"
          },
          "periodoIncremento": {
            "type": "integer",
            "format": "int32"
          },
          "montoIncremento": {
            "type": "number",
            "format": "double"
          },
          "idUsuario": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProyeccionUpdateDTO": {
        "type": "object",
        "properties": {
          "idAsesorComercial": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idProyeccionSeleccionada": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idJustificativoTransaccion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "origenFondos": {
            "type": "string",
            "nullable": true
          },
          "enviarProyeccion": {
            "type": "boolean",
            "nullable": true
          },
          "clienteAcepta": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProyeccionUpdateDto": {
        "type": "object",
        "properties": {
          "idUsuario": {
            "type": "integer",
            "format": "int32"
          },
          "idProyeccionAnterior": {
            "type": "integer",
            "format": "int32"
          },
          "idProducto": {
            "type": "integer",
            "format": "int32"
          },
          "capital": {
            "type": "number",
            "format": "double"
          },
          "aporteAdicional": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "plazo": {
            "type": "integer",
            "format": "int32"
          },
          "fechaInicial": {
            "type": "string",
            "format": "date-time"
          },
          "idOrigenCapital": {
            "type": "integer",
            "format": "int32"
          },
          "idOrigenIncremento": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSolicitudInversion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "costeOperativo": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "costeNotarizacion": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RankingClienteInversionDTO": {
        "type": "object",
        "properties": {
          "nombreCompleto": {
            "type": "string",
            "nullable": true
          },
          "montoInvertido": {
            "type": "number",
            "format": "double"
          },
          "totalInversiones": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Referencia": {
        "required": [
          "fechaCreacion",
          "idSolicitudInversion",
          "idTipoReferencia",
          "idUsuarioPropietario",
          "nombre"
        ],
        "type": "object",
        "properties": {
          "idReferencia": {
            "type": "integer",
            "format": "int32"
          },
          "idSolicitudInversion": {
            "type": "integer",
            "format": "int32"
          },
          "idTipoReferencia": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "direccion": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "telefonoCelular": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "telefonoFijo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "fechaCreacion": {
            "type": "string",
            "format": "date-time"
          },
          "fechaModificacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "idUsuarioPropietario": {
            "type": "integer",
            "format": "int32"
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegistroParcialDTO": {
        "required": [
          "contraseña",
          "email",
          "identificacion",
          "primerApellido",
          "primerNombre"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "identificacion": {
            "type": "string",
            "nullable": true
          },
          "terminosAceptados": {
            "type": "boolean"
          },
          "primerNombre": {
            "type": "string",
            "nullable": true
          },
          "segundoNombre": {
            "type": "string",
            "nullable": true
          },
          "primerApellido": {
            "type": "string",
            "nullable": true
          },
          "segundoApellido": {
            "type": "string",
            "nullable": true
          },
          "contraseña": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReporteCumplimientoSolicitudDTO": {
        "type": "object",
        "properties": {
          "idSolicitudInversion": {
            "type": "integer",
            "format": "int32"
          },
          "docAprobada": {
            "type": "boolean"
          },
          "legalAprobada": {
            "type": "boolean"
          },
          "contratoFirmado": {
            "type": "boolean"
          },
          "comprobanteCargado": {
            "type": "boolean"
          },
          "conciliacionOK": {
            "type": "boolean"
          },
          "tareasPendientes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Rol": {
        "type": "object",
        "properties": {
          "idRol": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "fechaCreacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "idUsuarioCreacion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fechaModificacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RollbackPagosDTO": {
        "type": "object",
        "properties": {
          "idPago": {
            "type": "integer",
            "description": "Identificador del pago.",
            "format": "int32"
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "description": "Identificador del usuario que realiza la modificación.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "DTO auxiliar para rollback de pagos en casos."
      },
      "RollbackUsuarioDto": {
        "type": "object",
        "properties": {
          "idUsuarioModificacion": {
            "type": "integer",
            "description": "Identificador del usuario que realiza la modificación.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "DTO auxiliar para rollback indicando el usuario que realiza la modificación."
      },
      "SolicitudCodigoTelefonoDTO": {
        "type": "object",
        "properties": {
          "idUsuario": {
            "type": "integer",
            "format": "int32"
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SolicitudInversionCreateDTO": {
        "type": "object",
        "properties": {
          "idUsuarioPropietario": {
            "type": "integer",
            "format": "int32"
          },
          "idProspecto": {
            "type": "integer",
            "format": "int32"
          },
          "idCliente": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "identificacion": {
            "$ref": "#/components/schemas/IdentificacionCreateDTO"
          }
        },
        "additionalProperties": false
      },
      "SolicitudInversionUpdateDTO": {
        "type": "object",
        "properties": {
          "idSolicitudInversion": {
            "type": "integer",
            "format": "int32"
          },
          "idUsuarioPropietario": {
            "type": "integer",
            "format": "int32"
          },
          "idProspecto": {
            "type": "integer",
            "format": "int32"
          },
          "idCliente": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "identificacion": {
            "$ref": "#/components/schemas/IdentificacionUpdateDTO"
          },
          "proyeccion": {
            "$ref": "#/components/schemas/ProyeccionUpdateDTO"
          },
          "datosGenerales": {
            "$ref": "#/components/schemas/DatosGeneralesUpdateDTO"
          },
          "actividadEconomica": {
            "$ref": "#/components/schemas/ActividadEconomicaUpdateDTO"
          },
          "datosEconomicos": {
            "$ref": "#/components/schemas/DatosEconomicosUpdateDTO"
          },
          "contactoUbicacion": {
            "$ref": "#/components/schemas/ContactoUbicacionUpdateDTO"
          },
          "banco": {
            "$ref": "#/components/schemas/BancoUpdateDTO"
          },
          "finalizacion": {
            "$ref": "#/components/schemas/FinalizacionUpdateDTO"
          },
          "adjuntos": {
            "$ref": "#/components/schemas/AdjuntosUpdateDTO"
          }
        },
        "additionalProperties": false
      },
      "SolicitudProspectoEstadoDTO": {
        "type": "object",
        "properties": {
          "idProspecto": {
            "type": "integer",
            "format": "int32"
          },
          "nombres": {
            "type": "string",
            "nullable": true
          },
          "apellidoPaterno": {
            "type": "string",
            "nullable": true
          },
          "ultimoEstadoSolicitud": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SolicitudProyeccionDetalleDTO": {
        "type": "object",
        "properties": {
          "idSolicitudInversion": {
            "type": "integer",
            "format": "int32"
          },
          "idProyeccion": {
            "type": "integer",
            "format": "int32"
          },
          "proyeccionNombre": {
            "type": "string",
            "nullable": true
          },
          "plazo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tasa": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "capital": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "faseProceso": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SolicitudProyeccionPorProductoDTO": {
        "type": "object",
        "properties": {
          "idProducto": {
            "type": "integer",
            "format": "int32"
          },
          "productoNombre": {
            "type": "string",
            "nullable": true
          },
          "totalProyecciones": {
            "type": "integer",
            "format": "int32"
          },
          "capitalTotal": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SolicitudesPorEstadoDTO": {
        "type": "object",
        "properties": {
          "estado": {
            "type": "string",
            "nullable": true
          },
          "totalSolicitudes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SolicitudesPorMesDTO": {
        "type": "object",
        "properties": {
          "año": {
            "type": "integer",
            "format": "int32"
          },
          "mes": {
            "type": "integer",
            "format": "int32"
          },
          "totalSolicitudes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TareaUpdateDinamicoDTO": {
        "type": "object",
        "properties": {
          "idResultado": {
            "type": "integer",
            "format": "int32"
          },
          "observacion": {
            "type": "string",
            "nullable": true
          },
          "camposTipo": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TareasPendientesGlobalDTO": {
        "type": "object",
        "properties": {
          "idTipoTarea": {
            "type": "integer",
            "format": "int32"
          },
          "nombreTipoTarea": {
            "type": "string",
            "nullable": true
          },
          "totalPendientes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TareasPendientesPorSolicitudDTO": {
        "type": "object",
        "properties": {
          "idSolicitudInversion": {
            "type": "integer",
            "format": "int32"
          },
          "tareasPendientes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TareasPorSolicitudEstadoDTO": {
        "type": "object",
        "properties": {
          "idSolicitudInversion": {
            "type": "integer",
            "format": "int32"
          },
          "idTipoTarea": {
            "type": "integer",
            "format": "int32"
          },
          "nombreTipoTarea": {
            "type": "string",
            "nullable": true
          },
          "idResultado": {
            "type": "integer",
            "format": "int32"
          },
          "nombreResultado": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TareasPorTipoEstadoGlobalDTO": {
        "type": "object",
        "properties": {
          "idTipoTarea": {
            "type": "integer",
            "format": "int32"
          },
          "nombreTipoTarea": {
            "type": "string",
            "nullable": true
          },
          "idResultado": {
            "type": "integer",
            "format": "int32"
          },
          "nombreResultado": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TipoActividad": {
        "type": "object",
        "properties": {
          "idTipoActividad": {
            "type": "integer",
            "format": "int32"
          },
          "descripcion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TipoCliente": {
        "required": [
          "nombreTipoCliente"
        ],
        "type": "object",
        "properties": {
          "idTipoCliente": {
            "type": "integer",
            "format": "int32"
          },
          "nombreTipoCliente": {
            "minLength": 1,
            "type": "string"
          },
          "fechaCreación": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fechaModificacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TipoCuenta": {
        "type": "object",
        "properties": {
          "idTipoCuenta": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TipoDocumentoCatalogo": {
        "type": "object",
        "properties": {
          "idTipoDocumento": {
            "type": "integer",
            "format": "int32"
          },
          "nombreTipoDocumento": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TipoIdentificacion": {
        "type": "object",
        "properties": {
          "idTipoIdentificacion": {
            "type": "integer",
            "format": "int32"
          },
          "tipo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TipoReferencia": {
        "type": "object",
        "properties": {
          "idTipoReferencia": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TipoSolicitud": {
        "type": "object",
        "properties": {
          "idTipoDeSolicitud": {
            "type": "integer",
            "format": "int32"
          },
          "nombreTipoDeSolicitud": {
            "type": "string",
            "nullable": true
          },
          "fechaCreación": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fechaModificacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TipoVia": {
        "type": "object",
        "properties": {
          "idTipoVia": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Usuario": {
        "type": "object",
        "properties": {
          "idUsuario": {
            "type": "integer",
            "format": "int32"
          },
          "primerNombre": {
            "type": "string",
            "nullable": true
          },
          "segundoNombre": {
            "type": "string",
            "nullable": true
          },
          "primerApellido": {
            "type": "string",
            "nullable": true
          },
          "segundoApellido": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "contraseña": {
            "type": "string",
            "nullable": true
          },
          "identificacion": {
            "type": "string",
            "nullable": true
          },
          "telefono": {
            "type": "string",
            "nullable": true
          },
          "esActivo": {
            "type": "boolean"
          },
          "validacionCorreo": {
            "type": "boolean"
          },
          "validacionTelefono": {
            "type": "boolean"
          },
          "aceptoTerminosCondiciones": {
            "type": "boolean"
          },
          "idUsuarioCreacion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fechaCreacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "idUsuarioModificacion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fechaModificacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UsuarioRol": {
        "type": "object",
        "properties": {
          "idUsuario": {
            "type": "integer",
            "format": "int32"
          },
          "idRol": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ValidacionTelefonoDTO": {
        "type": "object",
        "properties": {
          "idUsuario": {
            "type": "integer",
            "format": "int32"
          },
          "codigo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}